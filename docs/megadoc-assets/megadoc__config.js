
(function(__ref__) {
  if (typeof module === 'object' && typeof module.exports === 'object') {
    module.exports = __ref__;
  }
  else if (typeof exports === 'object') {
    exports['megadoc__config'] = __ref__;
  }
  else if (typeof window === 'object') {
    window['megadoc__config'] = __ref__;
  }
}({"collapsibleSidebar":false,"emittedFileExtension":".html","footer":"Crafted with &#9829; using <a href=\"https://github.com/megadoc\">megadoc</a>.","banner":false,"bannerLinks":[],"customLayouts":[{"match":{"by":"url","on":"*"},"regions":[{"name":"Core::Content","options":{"framed":true},"outlets":[{"name":"Markdown::Document","using":"articles","match":{"by":"namespace","on":"articles"}},{"name":"JS::Module","match":{"by":"namespace","on":"js"}}]},{"name":"Core::Sidebar","outlets":[{"name":"Markdown::Browser","using":"articles"},{"name":"Core::SidebarHeader","options":{"text":"API"}},{"name":"JS::Browser","using":"js"},{"name":"Core::SidebarSearch","options":{"text":"Search"}}]}]}],"redirect":{},"rewrite":{"/readme.html":"/index.html"},"metaDescription":"page.js routing sugars","motto":null,"pluginCount":3,"pluginNames":["megadoc-plugin-js","megadoc-plugin-markdown","megadoc-theme-minimalist"],"resizableSidebar":false,"fixedSidebar":true,"invertedSidebar":false,"sidebarWidth":340,"scrollSpying":false,"spotlight":true,"title":"page-fu","tooltipPreviews":false,"version":"6.5.0","database":[{"id":"js","name":"megadoc-plugin-js","title":"JS","meta":{"href":"/js/index.html","defaultLayouts":[{"match":{"by":"type","on":["Document","DocumentEntity"]},"regions":[{"name":"Core::Content","options":{"framed":true},"outlets":[{"name":"JS::ModuleHeader"},{"name":"JS::ModuleIndex"},{"name":"JS::ModuleBody"},{"name":"Core::Content"}]},{"name":"Core::Sidebar","outlets":[{"name":"JS::Browser"}]}]},{"match":{"by":"type","on":"Namespace"},"regions":[{"name":"Core::Sidebar","outlets":[{"name":"JS::Browser"}]},{"name":"Core::Content","options":{"framed":true},"outlets":[{"name":"JS::ModuleHeader"},{"name":"JS::Namespace"},{"name":"Core::Content"}]}]}],"anchor":"js","htmlFilePath":"js/index.html"},"config":{"id":"js","baseURL":null,"title":"JS","source":["**/*.js"],"exclude":null,"useDirAsNamespace":true,"inferModuleIdFromFileName":true,"inferNamespaces":true,"analyzeNode":null,"customTags":{},"showSourcePaths":false,"verbose":false,"alias":{},"parse":null,"parserOptions":{"presets":[["/home/kandie/Workspace/Projects/page-fu/node_modules/babel-preset-es2015",{"modules":false}]],"babelrc":false},"namespaceDirMap":{},"moduleMap":{},"namedReturnTags":true,"builtInTypes":[{"name":"page.Context","href":"https://visionmedia.github.io/page.js/#context"}],"docstringProcessors":[],"tagProcessors":[],"tagAliases":{},"linkToNamespacesInBrowser":false,"strict":false},"indexFields":["$uid","$filePath","aliases"],"documents":["3cd28142c4cffd77cf9845db1796a9bd","d5e7efb0352cc8dd2a06ab9b754bfa8a","d000264080b89df687df736d2df68189","1ac02699fb095579f59d162682dd7a2e","3e326638034aea0c4437c9ad706dcf2c","95e519d325f9a51a6bea58544d79fc56","685406d8925441c41fd12357a242661f","0b01744be800c641ecdbba8b9ef85fba","898617e738fe947bcb4fd7d3f92c5c20","a4868be3e8a4797247c8f74c8f34a69b"],"type":"Namespace","symbol":"/","uid":"783c78c40c77eff97ee0a4e05b9b077e","path":"js","indices":{}},{"id":"ensureNextIsCalled","title":"ensureNextIsCalled","summaryFields":["description"],"filePath":"src/ensureNextIsCalled.js","loc":{"start":{"line":42,"column":0},"end":{"line":61,"column":1}},"symbol":"","properties":{"aliases":[],"description":"<p>Ensure that the given function will always &quot;yield&quot; by calling <code>next</code> on its\nbehalf if needed.</p>\n<p><code>next</code> will be called implicitly in the following cases:</p>\n<ul>\n<li>the given function is undefined</li>\n<li>the given function only accepts the ctx parameter</li>\n</ul>\n<p>This is necessary when you&#39;re wrapping an <code>exit</code> hook since you want to\ninvoke the original <code>exit</code> hook before you do your thing, and in that case\nyou want to ensure that that hook will actually call you!</p>\n<p>Examples:</p>\n<pre class=\"language-javascript\"><code><span class=\"token comment\" spellcheck=\"true\">// No function:</span>\n<span class=\"token function\" >ensureNextIsCalled</span><span class=\"token punctuation\" >(</span>undefined<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >(</span>ctx<span class=\"token punctuation\" >,</span> <span class=\"token keyword\" >function</span> <span class=\"token function\" >next</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n  console<span class=\"token punctuation\" >.</span><span class=\"token function\" >assert</span><span class=\"token punctuation\" >(</span><span class=\"token boolean\" >true</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n<span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// Yes function but it's not aware of `next`:</span>\n<span class=\"token function\" >ensureNextIsCalled</span><span class=\"token punctuation\" >(</span><span class=\"token keyword\" >function</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span><span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >(</span>ctx<span class=\"token punctuation\" >,</span> <span class=\"token keyword\" >function</span> <span class=\"token function\" >next</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n  console<span class=\"token punctuation\" >.</span><span class=\"token function\" >assert</span><span class=\"token punctuation\" >(</span><span class=\"token boolean\" >true</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n<span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// Yes function but it's not aware of `next` either:</span>\n<span class=\"token function\" >ensureNextIsCalled</span><span class=\"token punctuation\" >(</span><span class=\"token keyword\" >function</span><span class=\"token punctuation\" >(</span>ctx<span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span><span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >(</span>ctx<span class=\"token punctuation\" >,</span> <span class=\"token keyword\" >function</span> <span class=\"token function\" >next</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n  console<span class=\"token punctuation\" >.</span><span class=\"token function\" >assert</span><span class=\"token punctuation\" >(</span><span class=\"token boolean\" >true</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n<span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// Yes function and it's aware of `next`, we'll do nothing:</span>\n<span class=\"token function\" >ensureNextIsCalled</span><span class=\"token punctuation\" >(</span><span class=\"token keyword\" >function</span><span class=\"token punctuation\" >(</span>ctx<span class=\"token punctuation\" >,</span> next<span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span> <span class=\"token function\" >next</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >(</span>ctx<span class=\"token punctuation\" >,</span> <span class=\"token keyword\" >function</span> <span class=\"token function\" >next</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n  console<span class=\"token punctuation\" >.</span><span class=\"token function\" >assert</span><span class=\"token punctuation\" >(</span><span class=\"token boolean\" >true</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n<span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span></code></pre>","id":"ensureNextIsCalled","isModule":true,"isDefaultExportedSymbol":true,"isExportedSymbol":true,"loc":{"start":{"line":42,"column":0},"end":{"line":61,"column":1}},"line":42,"mixinTargets":[],"name":"ensureNextIsCalled","nodeInfo":{"type":"Function","params":[{"name":"fn"}]},"symbol":null,"tags":[{"type":"private","string":"Ensure that the given function will always \"yield\" by calling `next` on its\nbehalf if needed.\n\n`next` will be called implicitly in the following cases:\n\n- the given function is undefined\n- the given function only accepts the ctx parameter\n\nThis is necessary when you're wrapping an `exit` hook since you want to\ninvoke the original `exit` hook before you do your thing, and in that case\nyou want to ensure that that hook will actually call you!\n\nExamples:\n\n    // No function:\n    ensureNextIsCalled(undefined)(ctx, function next() {\n      console.assert(true);\n    })\n\n    // Yes function but it's not aware of `next`:\n    ensureNextIsCalled(function() {})(ctx, function next() {\n      console.assert(true);\n    })\n\n    // Yes function but it's not aware of `next` either:\n    ensureNextIsCalled(function(ctx) {})(ctx, function next() {\n      console.assert(true);\n    })\n\n    // Yes function and it's aware of `next`, we'll do nothing:\n    ensureNextIsCalled(function(ctx, next) { next() })(ctx, function next() {\n      console.assert(true);\n    })","typeInfo":{"name":null,"description":null,"isOptional":null,"defaultValue":null,"type":null},"line":42},{"type":"param","string":"","typeInfo":{"name":"fn","type":{"name":"Function"}},"line":42},{"type":"param","string":"","typeInfo":{"name":"ctx","type":{"name":"page.Context","html":"<a target=\"_blank\" href=\"https://visionmedia.github.io/page.js/#context\">page.Context</a>"}},"line":42},{"type":"param","string":"","typeInfo":{"name":"next","type":{"name":"Function"}},"line":42}],"type":"Function"},"type":"Document","meta":{"href":"/js/ensureNextIsCalled.html","anchor":"ensureNextIsCalled","htmlFilePath":"js/ensureNextIsCalled.html"},"documents":[],"entities":[],"uid":"3cd28142c4cffd77cf9845db1796a9bd","summary":"Ensure that the given function will always \"yield\" by calling next on its behalf if needed.","parentNodeUID":"783c78c40c77eff97ee0a4e05b9b077e","path":"js/ensureNextIsCalled","indices":{"ensureNextIsCalled":1,"/src/ensureNextIsCalled.js":1,"src/ensureNextIsCalled.js":1}},{"id":"page-fu","title":"page-fu","summaryFields":["description"],"filePath":"src/index.js","loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":18}},"symbol":"","properties":{"aliases":[],"description":"<p>The package exports.</p>\n\n<h3 class=\"anchorable-heading\">\n  <a name=\"how-to-use\" class=\"anchorable-heading__anchor\"></a>\n  <a href=\"#how-to-use\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">How to use</span>\n</h3><p>If you&#39;re new to ES6 modules and packages, here&#39;s all you need to know to\nlearn how to use the package (and this reference):</p>\n<p>Every &quot;symbol&quot; that is listed in this reference is an &quot;export&quot; of the package\nwhich you can then import using the <code>import</code> statement. For example, to pull\nin the <code>Route</code>, <code>start</code> and <code>stop</code> symbols:</p>\n<pre class=\"language-javascript\"><code><span class=\"token keyword\" >import</span> <span class=\"token punctuation\" >{</span> Route<span class=\"token punctuation\" >,</span> start<span class=\"token punctuation\" >,</span> stop <span class=\"token punctuation\" >}</span> <span class=\"token keyword\" >from</span> <span class=\"token string\" >'page-fu'</span><span class=\"token punctuation\" >;</span></code></pre><p>That&#39;s it! You can now call <code>start()</code>, <code>stop()</code> and <code>Route()</code> or press ALT+F4.</p>\n","id":"page-fu","isModule":true,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":18}},"line":28,"mixinTargets":[],"name":"page-fu","nodeInfo":{"type":"Unknown"},"symbol":null,"tags":[{"type":"module","string":"","typeInfo":{"name":"page-fu","description":null,"isOptional":null,"defaultValue":null,"type":null},"line":28},{"type":"preserveOrder","string":"The package exports.\n\n### How to use\n\nIf you're new to ES6 modules and packages, here's all you need to know to\nlearn how to use the package (and this reference):\n\nEvery \"symbol\" that is listed in this reference is an \"export\" of the package\nwhich you can then import using the `import` statement. For example, to pull\nin the `Route`, `start` and `stop` symbols:\n\n    import { Route, start, stop } from 'page-fu';\n\nThat's it! You can now call `start()`, `stop()` and `Route()` or press ALT+F4.","typeInfo":{"name":null,"description":null,"isOptional":null,"defaultValue":null,"type":null},"line":28}],"type":"Unknown"},"type":"Document","meta":{"href":"/js/page-fu.html","anchor":"page-fu","htmlFilePath":"js/page-fu.html"},"documents":[],"entities":["24687ecc9836f46e71474564f3ca84e7","6963872af3db104645c5f4bd8a42e97a","c8f8ec2578ec14a6b4b9648785914928","c79053a86439a7ced157564ee21fa912","d09dc80e4472a84495943f3ca4fea5b5","6df4a60519207f7dbfa8bedf282f7f6d","8a7d7a606025365d08427d55ca8c7ac3","c40ae1ed8ddd623e1399c47eee592868","6129134ef0840f69fb71da35bdfa6bd1","3e02c1d8d4a41d7a59591615966b4528","b86891421512b2f2e41a48090b85290b","84d98142a3b1540165c48414125d650f","79f7fc4cdf695594e43233aad3597de4"],"uid":"d5e7efb0352cc8dd2a06ab9b754bfa8a","summary":"The package exports.","parentNodeUID":"783c78c40c77eff97ee0a4e05b9b077e","path":"js/page-fu","indices":{"page-fu":1,"/src/index.js":1,"src/index.js":1}},{"id":".Router","title":"page-fu.Router","summaryFields":["description"],"filePath":"src/index.js","loc":{"start":{"line":28,"column":9},"end":{"line":28,"column":15}},"properties":{"aliases":[],"description":"","id":"page-fu.Router","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":true,"loc":{"start":{"line":28,"column":9},"end":{"line":28,"column":15}},"line":28,"mixinTargets":[],"name":"Router","nodeInfo":{"type":"Unknown"},"receiver":"page-fu","symbol":".","tags":[{"type":"property","string":"","typeInfo":{"name":"Router","type":{"name":"Router","html":"<a class=\"mega-link--internal\" href=\"Router.html\" title=\"This module exposes APIs to perform routing side-effects via page.js.\">Router</a>"}},"line":28}],"type":"Router"},"indices":{".Router":0,"page-fu.Router":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/js/page-fu.html#.Router","anchor":".Router","htmlFilePath":null},"uid":"24687ecc9836f46e71474564f3ca84e7","parentNodeUID":"d5e7efb0352cc8dd2a06ab9b754bfa8a","path":"js/page-fu.Router"},{"id":".Route","title":"page-fu.Route","summaryFields":["description"],"filePath":"src/index.js","loc":{"start":{"line":33,"column":9},"end":{"line":33,"column":14}},"properties":{"aliases":[],"description":"","id":"page-fu.Route","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":true,"loc":{"start":{"line":33,"column":9},"end":{"line":33,"column":14}},"line":33,"mixinTargets":[],"name":"Route","nodeInfo":{"type":"Unknown"},"receiver":"page-fu","symbol":".","tags":[{"type":"property","string":"","typeInfo":{"name":"Route","type":{"name":"Route","html":"<a class=\"mega-link--internal\" href=\"Route.html\" title=\"Create a &quot;route handler&quot; equipped with all the capabilities provided by page-fu:\">Route</a>"}},"line":33}],"type":"Route"},"indices":{".Route":0,"page-fu.Route":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/js/page-fu.html#.Route","anchor":".Route","htmlFilePath":null},"uid":"6963872af3db104645c5f4bd8a42e97a","parentNodeUID":"d5e7efb0352cc8dd2a06ab9b754bfa8a","path":"js/page-fu.Route"},{"id":".start","title":"page-fu.start","summaryFields":["description"],"filePath":"src/index.js","loc":{"start":{"line":42,"column":0},"end":{"line":44,"column":1}},"properties":{"aliases":[],"description":"<p>Start the router.</p>\n","id":"page-fu.start","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":true,"loc":{"start":{"line":42,"column":0},"end":{"line":44,"column":1}},"line":42,"mixinTargets":[],"name":"start","nodeInfo":{"type":"Function","params":[{"name":"options"}]},"receiver":"page-fu","symbol":".","tags":[{"type":"param","string":"[page.js start()](https://visionmedia.github.io/page.js/#pageoptions)\noptions.","typeInfo":{"name":"options","description":"<p><a href=\"https://visionmedia.github.io/page.js/#pageoptions\" target=\"_blank\">page.js start()</a>\noptions.</p>\n","type":{"name":"Object"}},"line":42}],"type":"Function"},"indices":{".start":0,"page-fu.start":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/js/page-fu.html#.start","anchor":".start","htmlFilePath":null},"uid":"c8f8ec2578ec14a6b4b9648785914928","summary":"Start the router.","parentNodeUID":"d5e7efb0352cc8dd2a06ab9b754bfa8a","path":"js/page-fu.start"},{"id":".stop","title":"page-fu.stop","summaryFields":["description"],"filePath":"src/index.js","loc":{"start":{"line":50,"column":0},"end":{"line":52,"column":1}},"properties":{"aliases":[],"description":"<p>Stop the router. Any calls to routing methods beyond this stage will be\nignored.</p>\n","id":"page-fu.stop","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":true,"loc":{"start":{"line":50,"column":0},"end":{"line":52,"column":1}},"line":50,"mixinTargets":[],"name":"stop","nodeInfo":{"type":"Function","params":[]},"receiver":"page-fu","symbol":".","tags":[],"type":"Function"},"indices":{".stop":0,"page-fu.stop":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/js/page-fu.html#.stop","anchor":".stop","htmlFilePath":null},"uid":"c79053a86439a7ced157564ee21fa912","summary":"Stop the router. Any calls to routing methods beyond this stage will be ignored.","parentNodeUID":"d5e7efb0352cc8dd2a06ab9b754bfa8a","path":"js/page-fu.stop"},{"id":".redirectTo","title":"page-fu.redirectTo","summaryFields":["description"],"filePath":"src/index.js","loc":{"start":{"line":59,"column":0},"end":{"line":59,"column":56}},"properties":{"aliases":[],"description":"<p>Forwards to <a href=\"Router.html#.redirectTo\" title=\"Transition to a different page and replace the current history entry.\" class=\"mega-link--internal\">Router.redirectTo</a></p>\n","id":"page-fu.redirectTo","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":true,"loc":{"start":{"line":59,"column":0},"end":{"line":59,"column":56}},"line":59,"mixinTargets":[],"name":"redirectTo","nodeInfo":{"type":"Unknown"},"receiver":"page-fu","symbol":".","tags":[{"type":"type","string":"Forwards to [[Router.redirectTo]]","typeInfo":{"description":"<p>Forwards to <a href=\"Router.html#.redirectTo\" title=\"Transition to a different page and replace the current history entry.\" class=\"mega-link--internal\">Router.redirectTo</a></p>\n","type":{"name":"Function"}},"line":59}],"type":"Function"},"indices":{".redirectTo":0,"page-fu.redirectTo":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/js/page-fu.html#.redirectTo","anchor":".redirectTo","htmlFilePath":null},"uid":"d09dc80e4472a84495943f3ca4fea5b5","summary":"Forwards to [[Router.redirectTo]]","parentNodeUID":"d5e7efb0352cc8dd2a06ab9b754bfa8a","path":"js/page-fu.redirectTo"},{"id":".replaceQuery","title":"page-fu.replaceQuery","summaryFields":["description"],"filePath":"src/index.js","loc":{"start":{"line":65,"column":0},"end":{"line":65,"column":60}},"properties":{"aliases":[],"description":"<p>to <a href=\"Router.html#.replaceQuery\" title=\"Replace the queryString fully with the next representation. null values will be removed from the resulting queryString.\" class=\"mega-link--internal\">Router.replaceQuery</a></p>\n","id":"page-fu.replaceQuery","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":true,"loc":{"start":{"line":65,"column":0},"end":{"line":65,"column":60}},"line":65,"mixinTargets":[],"name":"replaceQuery","nodeInfo":{"type":"Unknown"},"receiver":"page-fu","symbol":".","tags":[{"type":"type","string":"to [[Router.replaceQuery]]","typeInfo":{"name":"Forwards","description":"<p>to <a href=\"Router.html#.replaceQuery\" title=\"Replace the queryString fully with the next representation. null values will be removed from the resulting queryString.\" class=\"mega-link--internal\">Router.replaceQuery</a></p>\n","type":{"name":"Function"}},"line":65}],"type":"Function"},"indices":{".replaceQuery":0,"page-fu.replaceQuery":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/js/page-fu.html#.replaceQuery","anchor":".replaceQuery","htmlFilePath":null},"uid":"6df4a60519207f7dbfa8bedf282f7f6d","summary":"to [[Router.replaceQuery]]","parentNodeUID":"d5e7efb0352cc8dd2a06ab9b754bfa8a","path":"js/page-fu.replaceQuery"},{"id":".transitionTo","title":"page-fu.transitionTo","summaryFields":["description"],"filePath":"src/index.js","loc":{"start":{"line":72,"column":0},"end":{"line":72,"column":60}},"properties":{"aliases":[],"description":"<p>Forwards to <a href=\"Router.html#.transitionTo\" title=\"Transition to a different page.\" class=\"mega-link--internal\">Router.transitionTo</a></p>\n","id":"page-fu.transitionTo","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":true,"loc":{"start":{"line":72,"column":0},"end":{"line":72,"column":60}},"line":72,"mixinTargets":[],"name":"transitionTo","nodeInfo":{"type":"Unknown"},"receiver":"page-fu","symbol":".","tags":[{"type":"type","string":"Forwards to [[Router.transitionTo]]","typeInfo":{"description":"<p>Forwards to <a href=\"Router.html#.transitionTo\" title=\"Transition to a different page.\" class=\"mega-link--internal\">Router.transitionTo</a></p>\n","type":{"name":"Function"}},"line":72}],"type":"Function"},"indices":{".transitionTo":0,"page-fu.transitionTo":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/js/page-fu.html#.transitionTo","anchor":".transitionTo","htmlFilePath":null},"uid":"8a7d7a606025365d08427d55ca8c7ac3","summary":"Forwards to [[Router.transitionTo]]","parentNodeUID":"d5e7efb0352cc8dd2a06ab9b754bfa8a","path":"js/page-fu.transitionTo"},{"id":".updateQuery","title":"page-fu.updateQuery","summaryFields":["description"],"filePath":"src/index.js","loc":{"start":{"line":79,"column":0},"end":{"line":79,"column":58}},"properties":{"aliases":[],"description":"<p>Forwards to <a href=\"Router.html#.updateQuery\" title=\"Partially update the queryString according to a set of rules:\" class=\"mega-link--internal\">Router.updateQuery</a></p>\n","id":"page-fu.updateQuery","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":true,"loc":{"start":{"line":79,"column":0},"end":{"line":79,"column":58}},"line":79,"mixinTargets":[],"name":"updateQuery","nodeInfo":{"type":"Unknown"},"receiver":"page-fu","symbol":".","tags":[{"type":"type","string":"Forwards to [[Router.updateQuery]]","typeInfo":{"description":"<p>Forwards to <a href=\"Router.html#.updateQuery\" title=\"Partially update the queryString according to a set of rules:\" class=\"mega-link--internal\">Router.updateQuery</a></p>\n","type":{"name":"Function"}},"line":79}],"type":"Function"},"indices":{".updateQuery":0,"page-fu.updateQuery":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/js/page-fu.html#.updateQuery","anchor":".updateQuery","htmlFilePath":null},"uid":"c40ae1ed8ddd623e1399c47eee592868","summary":"Forwards to [[Router.updateQuery]]","parentNodeUID":"d5e7efb0352cc8dd2a06ab9b754bfa8a","path":"js/page-fu.updateQuery"},{"id":".withFirstClassMethods","title":"page-fu.withFirstClassMethods","summaryFields":["description"],"filePath":"src/index.js","loc":{"start":{"line":82,"column":9},"end":{"line":82,"column":41}},"properties":{"aliases":[],"description":"","id":"page-fu.withFirstClassMethods","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":true,"loc":{"start":{"line":82,"column":9},"end":{"line":82,"column":41}},"line":82,"mixinTargets":[],"name":"withFirstClassMethods","nodeInfo":{"type":"Unknown"},"receiver":"page-fu","symbol":".","tags":[{"type":"property","string":"","typeInfo":{"type":{"name":"withFirstClassMethods","html":"<a class=\"mega-link--internal\" href=\"withFirstClassMethods.html\" title=\"Create an object whose functions are permanently bound to it (i.e. &quot;first- class&quot; functions).\">withFirstClassMethods</a>"}},"line":82}],"type":"withFirstClassMethods"},"indices":{".withFirstClassMethods":0,"page-fu.withFirstClassMethods":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/js/page-fu.html#.withFirstClassMethods","anchor":".withFirstClassMethods","htmlFilePath":null},"uid":"6129134ef0840f69fb71da35bdfa6bd1","parentNodeUID":"d5e7efb0352cc8dd2a06ab9b754bfa8a","path":"js/page-fu.withFirstClassMethods"},{"id":".withProps","title":"page-fu.withProps","summaryFields":["description"],"filePath":"src/index.js","loc":{"start":{"line":85,"column":9},"end":{"line":85,"column":29}},"properties":{"aliases":[],"description":"","id":"page-fu.withProps","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":true,"loc":{"start":{"line":85,"column":9},"end":{"line":85,"column":29}},"line":85,"mixinTargets":[],"name":"withProps","nodeInfo":{"type":"Unknown"},"receiver":"page-fu","symbol":".","tags":[{"type":"property","string":"","typeInfo":{"type":{"name":"withProps","html":"<a class=\"mega-link--internal\" href=\"withProps.html\" title=\"Inject named parameters and query parameters as &quot;[[props | withProps@props]]&quot; into your route.\">withProps</a>"}},"line":85}],"type":"withProps"},"indices":{".withProps":0,"page-fu.withProps":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/js/page-fu.html#.withProps","anchor":".withProps","htmlFilePath":null},"uid":"3e02c1d8d4a41d7a59591615966b4528","parentNodeUID":"d5e7efb0352cc8dd2a06ab9b754bfa8a","path":"js/page-fu.withProps"},{"id":".withRoutingAPIs","title":"page-fu.withRoutingAPIs","summaryFields":["description"],"filePath":"src/index.js","loc":{"start":{"line":91,"column":9},"end":{"line":91,"column":35}},"properties":{"aliases":[],"description":"","id":"page-fu.withRoutingAPIs","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":true,"loc":{"start":{"line":91,"column":9},"end":{"line":91,"column":35}},"line":91,"mixinTargets":[],"name":"withRoutingAPIs","nodeInfo":{"type":"Unknown"},"receiver":"page-fu","symbol":".","tags":[{"type":"property","string":"","typeInfo":{"type":{"name":"withRoutingAPIs","html":"<a class=\"mega-link--internal\" href=\"withRoutingAPIs.html\" title=\"A cute and simple decorator that allows direct access to the [[router | Router]]&#39;s primary routines.\">withRoutingAPIs</a>"}},"line":91}],"type":"withRoutingAPIs"},"indices":{".withRoutingAPIs":0,"page-fu.withRoutingAPIs":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/js/page-fu.html#.withRoutingAPIs","anchor":".withRoutingAPIs","htmlFilePath":null},"uid":"b86891421512b2f2e41a48090b85290b","parentNodeUID":"d5e7efb0352cc8dd2a06ab9b754bfa8a","path":"js/page-fu.withRoutingAPIs"},{"id":".withAtomicity","title":"page-fu.withAtomicity","summaryFields":["description"],"filePath":"src/index.js","loc":{"start":{"line":94,"column":9},"end":{"line":94,"column":33}},"properties":{"aliases":[],"description":"","id":"page-fu.withAtomicity","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":true,"loc":{"start":{"line":94,"column":9},"end":{"line":94,"column":33}},"line":94,"mixinTargets":[],"name":"withAtomicity","nodeInfo":{"type":"Unknown"},"receiver":"page-fu","symbol":".","tags":[{"type":"property","string":"","typeInfo":{"type":{"name":"withAtomicity","html":"<a class=\"mega-link--internal\" href=\"withAtomicity.html\" title=\"Ensure that your route&#39;s exit hook is invoked only when its enter hook was also invoked during the active dispatch. Hence, &quot;atomic&quot;.\">withAtomicity</a>"}},"line":94}],"type":"withAtomicity"},"indices":{".withAtomicity":0,"page-fu.withAtomicity":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/js/page-fu.html#.withAtomicity","anchor":".withAtomicity","htmlFilePath":null},"uid":"84d98142a3b1540165c48414125d650f","parentNodeUID":"d5e7efb0352cc8dd2a06ab9b754bfa8a","path":"js/page-fu.withAtomicity"},{"id":".withHooks","title":"page-fu.withHooks","summaryFields":["description"],"filePath":"src/index.js","loc":{"start":{"line":97,"column":9},"end":{"line":97,"column":29}},"properties":{"aliases":[],"description":"","id":"page-fu.withHooks","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":true,"loc":{"start":{"line":97,"column":9},"end":{"line":97,"column":29}},"line":97,"mixinTargets":[],"name":"withHooks","nodeInfo":{"type":"Unknown"},"receiver":"page-fu","symbol":".","tags":[{"type":"property","string":"","typeInfo":{"type":{"name":"withHooks","html":"<a class=\"mega-link--internal\" href=\"withHooks.html\" title=\"Produce a route object that specifies both an enter and an exit hook given either a function to be used as the sole &quot;enter&quot; hook, or an object that defines one or both hooks.\">withHooks</a>"}},"line":97}],"type":"withHooks"},"indices":{".withHooks":0,"page-fu.withHooks":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/js/page-fu.html#.withHooks","anchor":".withHooks","htmlFilePath":null},"uid":"79f7fc4cdf695594e43233aad3597de4","parentNodeUID":"d5e7efb0352cc8dd2a06ab9b754bfa8a","path":"js/page-fu.withHooks"},{"id":"Route","title":"Route","summaryFields":["description"],"filePath":"src/Route.js","loc":{"start":{"line":63,"column":0},"end":{"line":70,"column":3}},"symbol":"","properties":{"aliases":[],"description":"<p>Create a &quot;route handler&quot; equipped with all the capabilities provided by\npage-fu:</p>\n<ul>\n<li>state management via <a href=\"withState.html\" title=\"Decorate your route with the ability to transition between (internal) states. That state will be purged upon entering and exiting the route so you do not need to manage it.\" class=\"mega-link--internal\">withState</a></li>\n<li>routing props via <a href=\"withProps.html\" title=\"Inject named parameters and query parameters as &quot;[[props | withProps@props]]&quot; into your route.\" class=\"mega-link--internal\">withProps</a></li>\n<li><a href=\"withAtomicity.html\" title=\"Ensure that your route&#39;s exit hook is invoked only when its enter hook was also invoked during the active dispatch. Hence, &quot;atomic&quot;.\" class=\"mega-link--internal\">atomicity</a></li>\n<li><a href=\"withFirstClassMethods.html\" title=\"Create an object whose functions are permanently bound to it (i.e. &quot;first- class&quot; functions).\" class=\"mega-link--internal\">first-class functions</a> for convenience</li>\n<li>direct access to <a href=\"withRoutingAPIs.html\" title=\"A cute and simple decorator that allows direct access to the [[router | Router]]&#39;s primary routines.\" class=\"mega-link--internal\">routing APIs</a> for convenience</li>\n<li>good manners via <a href=\"withHooks.html\" title=\"Produce a route object that specifies both an enter and an exit hook given either a function to be used as the sole &quot;enter&quot; hook, or an object that defines one or both hooks.\" class=\"mega-link--internal\">withHooks</a></li>\n</ul>\n<p><code>Route</code> embraces the simplicity of page.js and its middleware architecture in\nthat it&#39;s just a pipeline of functions that your route handler specification\ngoes through and then comes out of augmented with super powers.</p>\n<p>Under the hoods, this is the definition of the <code>Route</code> function (at the time\nof writing, anyway):</p>\n<pre class=\"language-javascript\"><code><span class=\"token function\" >flow</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >[</span>\n  withHooks<span class=\"token punctuation\" >,</span>\n  withState<span class=\"token punctuation\" >,</span>\n  withProps<span class=\"token punctuation\" >,</span>\n  withRoutingAPIs<span class=\"token punctuation\" >,</span>\n  withAtomicity<span class=\"token punctuation\" >,</span>\n  withFirstClassMethods\n<span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >)</span></code></pre><p>If you don&#39;t care about one or another of the decorators provided by default,\nyou are free to create your own generator by picking the decorators that you\nwant and <a href=\"https://lodash.com/docs/4.17.4#flow\" target=\"_blank\">composing</a> them.</p>\n<p><strong>Basic usage example</strong></p>\n<pre class=\"language-javascript\"><code><span class=\"token keyword\" >import</span> <span class=\"token punctuation\" >{</span> Route <span class=\"token punctuation\" >}</span> <span class=\"token keyword\" >from</span> <span class=\"token string\" >'page-fu'</span><span class=\"token punctuation\" >;</span>\n<span class=\"token keyword\" >import</span> page <span class=\"token keyword\" >from</span> <span class=\"token string\" >'page'</span><span class=\"token punctuation\" >;</span>\n\n<span class=\"token keyword\" >const</span> UserRoute <span class=\"token operator\" >=</span> <span class=\"token function\" >Route</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span>\n\n<span class=\"token function\" >page</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'/users/:userId'</span><span class=\"token punctuation\" >,</span> UserRoute<span class=\"token punctuation\" >.</span>enter<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\npage<span class=\"token punctuation\" >.</span><span class=\"token function\" >exit</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'/users/:userId'</span><span class=\"token punctuation\" >,</span> UserRoute<span class=\"token punctuation\" >.</span>exit<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span></code></pre><p>If this example looked silly to you (it probably did!) then you may want to\ntake a look at a <a href=\"../examples.html\" title=\"This is a more complete example that shows three of the decorators at work together: [[state | withState]], [[props | withProps]], and the [[atomicity guard | withAtomicity]].\" class=\"mega-link--internal\">more complete example</a>.</p>\n","id":"Route","isModule":true,"isDefaultExportedSymbol":true,"isExportedSymbol":true,"loc":{"start":{"line":63,"column":0},"end":{"line":70,"column":3}},"line":63,"mixinTargets":[],"name":"Route","nodeInfo":{"type":"Unknown"},"symbol":null,"tags":[{"type":"module","string":"","typeInfo":{"name":"Route","description":null,"isOptional":null,"defaultValue":null,"type":null},"line":63},{"type":"type","string":"Create a \"route handler\" equipped with all the capabilities provided by\npage-fu:\n\n- state management via [[withState]]\n- routing props via [[withProps]]\n- [[atomicity | withAtomicity]]\n- [[first-class functions | withFirstClassMethods]] for convenience\n- direct access to [[routing APIs | withRoutingAPIs]] for convenience\n- good manners via [[withHooks]]\n\n`Route` embraces the simplicity of page.js and its middleware architecture in\nthat it's just a pipeline of functions that your route handler specification\ngoes through and then comes out of augmented with super powers.\n\nUnder the hoods, this is the definition of the `Route` function (at the time\nof writing, anyway):\n\n    flow([\n      withHooks,\n      withState,\n      withProps,\n      withRoutingAPIs,\n      withAtomicity,\n      withFirstClassMethods\n    ])\n\nIf you don't care about one or another of the decorators provided by default,\nyou are free to create your own generator by picking the decorators that you\nwant and [composing](https://lodash.com/docs/4.17.4#flow) them.\n\n**Basic usage example**\n\n    import { Route } from 'page-fu';\n    import page from 'page';\n\n    const UserRoute = Route()\n\n    page('/users/:userId', UserRoute.enter);\n    page.exit('/users/:userId', UserRoute.exit);\n\nIf this example looked silly to you (it probably did!) then you may want to\ntake a look at a [[more complete example | ../doc/examples.md]].","typeInfo":{"description":"<p>Create a &quot;route handler&quot; equipped with all the capabilities provided by\npage-fu:</p>\n<ul>\n<li>state management via <a href=\"withState.html\" title=\"Decorate your route with the ability to transition between (internal) states. That state will be purged upon entering and exiting the route so you do not need to manage it.\" class=\"mega-link--internal\">withState</a></li>\n<li>routing props via <a href=\"withProps.html\" title=\"Inject named parameters and query parameters as &quot;[[props | withProps@props]]&quot; into your route.\" class=\"mega-link--internal\">withProps</a></li>\n<li><a href=\"withAtomicity.html\" title=\"Ensure that your route&#39;s exit hook is invoked only when its enter hook was also invoked during the active dispatch. Hence, &quot;atomic&quot;.\" class=\"mega-link--internal\">atomicity</a></li>\n<li><a href=\"withFirstClassMethods.html\" title=\"Create an object whose functions are permanently bound to it (i.e. &quot;first- class&quot; functions).\" class=\"mega-link--internal\">first-class functions</a> for convenience</li>\n<li>direct access to <a href=\"withRoutingAPIs.html\" title=\"A cute and simple decorator that allows direct access to the [[router | Router]]&#39;s primary routines.\" class=\"mega-link--internal\">routing APIs</a> for convenience</li>\n<li>good manners via <a href=\"withHooks.html\" title=\"Produce a route object that specifies both an enter and an exit hook given either a function to be used as the sole &quot;enter&quot; hook, or an object that defines one or both hooks.\" class=\"mega-link--internal\">withHooks</a></li>\n</ul>\n<p><code>Route</code> embraces the simplicity of page.js and its middleware architecture in\nthat it&#39;s just a pipeline of functions that your route handler specification\ngoes through and then comes out of augmented with super powers.</p>\n<p>Under the hoods, this is the definition of the <code>Route</code> function (at the time\nof writing, anyway):</p>\n<pre class=\"language-javascript\"><code><span class=\"token function\" >flow</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >[</span>\n  withHooks<span class=\"token punctuation\" >,</span>\n  withState<span class=\"token punctuation\" >,</span>\n  withProps<span class=\"token punctuation\" >,</span>\n  withRoutingAPIs<span class=\"token punctuation\" >,</span>\n  withAtomicity<span class=\"token punctuation\" >,</span>\n  withFirstClassMethods\n<span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >)</span></code></pre><p>If you don&#39;t care about one or another of the decorators provided by default,\nyou are free to create your own generator by picking the decorators that you\nwant and <a href=\"https://lodash.com/docs/4.17.4#flow\" target=\"_blank\">composing</a> them.</p>\n<p><strong>Basic usage example</strong></p>\n<pre class=\"language-javascript\"><code><span class=\"token keyword\" >import</span> <span class=\"token punctuation\" >{</span> Route <span class=\"token punctuation\" >}</span> <span class=\"token keyword\" >from</span> <span class=\"token string\" >'page-fu'</span><span class=\"token punctuation\" >;</span>\n<span class=\"token keyword\" >import</span> page <span class=\"token keyword\" >from</span> <span class=\"token string\" >'page'</span><span class=\"token punctuation\" >;</span>\n\n<span class=\"token keyword\" >const</span> UserRoute <span class=\"token operator\" >=</span> <span class=\"token function\" >Route</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span>\n\n<span class=\"token function\" >page</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'/users/:userId'</span><span class=\"token punctuation\" >,</span> UserRoute<span class=\"token punctuation\" >.</span>enter<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\npage<span class=\"token punctuation\" >.</span><span class=\"token function\" >exit</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'/users/:userId'</span><span class=\"token punctuation\" >,</span> UserRoute<span class=\"token punctuation\" >.</span>exit<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span></code></pre><p>If this example looked silly to you (it probably did!) then you may want to\ntake a look at a <a href=\"../examples.html\" title=\"This is a more complete example that shows three of the decorators at work together: [[state | withState]], [[props | withProps]], and the [[atomicity guard | withAtomicity]].\" class=\"mega-link--internal\">more complete example</a>.</p>\n","type":{"name":"Function"}},"line":63},{"type":"param","string":"Your route definition.","typeInfo":{"name":"spec","description":"<p>Your route definition.</p>\n","type":{"name":"Object"}},"line":63},{"type":"return","string":"The route handler with the APIs you defined in the spec as well as\nall the APIs and properties exposed by the decorators.","typeInfo":{"description":"<p>The route handler with the APIs you defined in the spec as well as\nall the APIs and properties exposed by the decorators.</p>\n","type":{"name":"Route","html":"<a class=\"mega-link--internal mega-link--active\" title=\"Create a &quot;route handler&quot; equipped with all the capabilities provided by page-fu:\">Route</a>"}},"line":63}],"type":"Function"},"type":"Document","meta":{"href":"/js/Route.html","anchor":"Route","htmlFilePath":"js/Route.html"},"documents":[],"entities":[],"uid":"d000264080b89df687df736d2df68189","summary":"Create a \"route handler\" equipped with all the capabilities provided by page-fu:","parentNodeUID":"783c78c40c77eff97ee0a4e05b9b077e","path":"js/Route","indices":{"Route":1,"/src/Route.js":1,"src/Route.js":1}},{"id":"Router","title":"Router","summaryFields":["description"],"filePath":"src/Router.js","loc":{"start":{"line":20,"column":15},"end":{"line":84,"column":1}},"symbol":"","properties":{"aliases":[],"description":"<p>This module exposes APIs to perform routing side-effects via page.js.</p>\n<p>Normally you wouldn&#39;t want to reach out to this directly. A better approach\nwould be to restrict routing side-effects to your route handlers, in which\ncase they&#39;d access these APIs through the decorations provided by\n<a href=\"withRoutingAPIs.html\" title=\"A cute and simple decorator that allows direct access to the [[router | Router]]&#39;s primary routines.\" class=\"mega-link--internal\">withRoutingAPIs</a>.</p>\n<p>However, in the case that you happen to need to interact with the router\noutside of a handler&#39;s context, you can use these APIs.</p>\n","id":"Router","isModule":true,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":20,"column":15},"end":{"line":84,"column":1}},"line":20,"mixinTargets":[],"name":"Router","nodeInfo":{"type":"Object","properties":[{"key":"transitionTo","value":{"type":"Function","params":[{"name":"pathname"}]}},{"key":"redirectTo","value":{"type":"Function","params":[{"name":"pathname"}]}},{"key":"updateQuery","value":{"type":"Function","params":[{"name":"partialQuery"}]}},{"key":"replaceQuery","value":{"type":"Function","params":[{"name":"nextQuery"}]}}]},"symbol":null,"tags":[{"type":"module","string":"","typeInfo":{"name":"Router","description":null,"isOptional":null,"defaultValue":null,"type":null},"line":20},{"type":"preserveOrder","string":"This module exposes APIs to perform routing side-effects via page.js.\n\nNormally you wouldn't want to reach out to this directly. A better approach\nwould be to restrict routing side-effects to your route handlers, in which\ncase they'd access these APIs through the decorations provided by\n[[withRoutingAPIs]].\n\nHowever, in the case that you happen to need to interact with the router\noutside of a handler's context, you can use these APIs.","typeInfo":{"name":null,"description":null,"isOptional":null,"defaultValue":null,"type":null},"line":20}],"type":"Object"},"type":"Document","meta":{"href":"/js/Router.html","anchor":"Router","htmlFilePath":"js/Router.html"},"documents":[],"entities":["0f4740628149dfe3e022008e2e54bc12","e5dae1c7dcba889c5ccb99ea3c62a83c","0264993c20c2bb0b662097c6e0096b68","58d89033a8f3b5976f13caffd48beaad"],"uid":"1ac02699fb095579f59d162682dd7a2e","summary":"This module exposes APIs to perform routing side-effects via page.js.","parentNodeUID":"783c78c40c77eff97ee0a4e05b9b077e","path":"js/Router","indices":{"Router":1,"/src/Router.js":1,"src/Router.js":1}},{"id":".transitionTo","title":"Router.transitionTo","summaryFields":["description"],"filePath":"src/Router.js","loc":{"start":{"line":"?"},"end":{"line":"?"}},"properties":{"aliases":[],"description":"<p>Transition to a different page.</p>\n","id":"Router.transitionTo","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":"?"},"end":{"line":"?"}},"line":"?","mixinTargets":[],"name":"transitionTo","nodeInfo":{"type":"Function","params":[{"name":"pathname"}]},"receiver":"Router","symbol":".","tags":[{"type":"param","string":"","typeInfo":{"name":"pathname","type":{"name":"String","html":"String"}},"line":"?"},{"type":"return","string":"","typeInfo":{"type":{"name":"void","html":"void"}},"line":"?"}],"type":"Function"},"indices":{".transitionTo":0,"Router.transitionTo":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/js/Router.html#.transitionTo","anchor":".transitionTo","htmlFilePath":null},"uid":"0f4740628149dfe3e022008e2e54bc12","summary":"Transition to a different page.","parentNodeUID":"1ac02699fb095579f59d162682dd7a2e","path":"js/Router.transitionTo"},{"id":".redirectTo","title":"Router.redirectTo","summaryFields":["description"],"filePath":"src/Router.js","loc":{"start":{"line":"?"},"end":{"line":"?"}},"properties":{"aliases":[],"description":"<p>Transition to a different page and replace the current history entry.</p>\n","id":"Router.redirectTo","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":"?"},"end":{"line":"?"}},"line":"?","mixinTargets":[],"name":"redirectTo","nodeInfo":{"type":"Function","params":[{"name":"pathname"}]},"receiver":"Router","symbol":".","tags":[{"type":"param","string":"","typeInfo":{"name":"pathname","type":{"name":"String","html":"String"}},"line":"?"},{"type":"return","string":"","typeInfo":{"type":{"name":"void","html":"void"}},"line":"?"}],"type":"Function"},"indices":{".redirectTo":0,"Router.redirectTo":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/js/Router.html#.redirectTo","anchor":".redirectTo","htmlFilePath":null},"uid":"e5dae1c7dcba889c5ccb99ea3c62a83c","summary":"Transition to a different page and replace the current history entry.","parentNodeUID":"1ac02699fb095579f59d162682dd7a2e","path":"js/Router.redirectTo"},{"id":".updateQuery","title":"Router.updateQuery","summaryFields":["description"],"filePath":"src/Router.js","loc":{"start":{"line":"?"},"end":{"line":"?"}},"properties":{"aliases":[],"description":"<p>Partially update the queryString according to a set of rules:</p>\n<ul>\n<li>any item that evaluates to <code>undefined</code>, <code>null</code>, or <code>false</code> will be\nremoved from the queryString</li>\n<li>any item that already exists will be overriden with the next value</li>\n</ul>\n<p>If the behaviour of discarding &quot;falseys&quot; is undesired, look into using\n<a href=\"#.replaceQuery\" title=\"Replace the queryString fully with the next representation. null values will be removed from the resulting queryString.\" class=\"mega-link--internal\">Router.replaceQuery</a> instead.</p>\n","id":"Router.updateQuery","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":"?"},"end":{"line":"?"}},"line":"?","mixinTargets":[],"name":"updateQuery","nodeInfo":{"type":"Function","params":[{"name":"partialQuery"}]},"receiver":"Router","symbol":".","tags":[{"type":"param","string":"A *partial* set of query parameters that will be combined with\n(or override) the existing ones.","typeInfo":{"name":"partialQuery","description":"<p>A <em>partial</em> set of query parameters that will be combined with\n(or override) the existing ones.</p>\n","type":{"name":"Object"}},"line":"?"},{"type":"return","string":"","typeInfo":{"type":{"name":"void","html":"void"}},"line":"?"}],"type":"Function"},"indices":{".updateQuery":0,"Router.updateQuery":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/js/Router.html#.updateQuery","anchor":".updateQuery","htmlFilePath":null},"uid":"0264993c20c2bb0b662097c6e0096b68","summary":"Partially update the queryString according to a set of rules:","parentNodeUID":"1ac02699fb095579f59d162682dd7a2e","path":"js/Router.updateQuery"},{"id":".replaceQuery","title":"Router.replaceQuery","summaryFields":["description"],"filePath":"src/Router.js","loc":{"start":{"line":"?"},"end":{"line":"?"}},"properties":{"aliases":[],"description":"<p>Replace the queryString fully with the next representation. <code>null</code> values\nwill be removed from the resulting queryString.</p>\n","id":"Router.replaceQuery","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":"?"},"end":{"line":"?"}},"line":"?","mixinTargets":[],"name":"replaceQuery","nodeInfo":{"type":"Function","params":[{"name":"nextQuery"}]},"receiver":"Router","symbol":".","tags":[{"type":"param","string":"Your query parameters.","typeInfo":{"name":"nextQuery","description":"<p>Your query parameters.</p>\n","type":{"name":"Object"}},"line":"?"},{"type":"return","string":"","typeInfo":{"type":{"name":"void","html":"void"}},"line":"?"}],"type":"Function"},"indices":{".replaceQuery":0,"Router.replaceQuery":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/js/Router.html#.replaceQuery","anchor":".replaceQuery","htmlFilePath":null},"uid":"58d89033a8f3b5976f13caffd48beaad","summary":"Replace the queryString fully with the next representation. null values will be removed from the resulting queryString.","parentNodeUID":"1ac02699fb095579f59d162682dd7a2e","path":"js/Router.replaceQuery"},{"id":"withAtomicity","title":"withAtomicity","summaryFields":["description"],"filePath":"src/withAtomicity.js","loc":{"start":{"line":52,"column":0},"end":{"line":91,"column":1}},"symbol":"","properties":{"aliases":[],"description":"<p>Ensure that your route&#39;s <code>exit</code> hook is invoked only when its <code>enter</code> hook\nwas also invoked during the active dispatch. Hence, &quot;atomic&quot;.</p>\n<p>Consider the following scenario:</p>\n<pre class=\"language-javascript\"><code><span class=\"token function\" >page</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'/patients/new'</span><span class=\"token punctuation\" >,</span> NewPatientRoute<span class=\"token punctuation\" >.</span>enter<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\npage<span class=\"token punctuation\" >.</span><span class=\"token function\" >exit</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'/patients/new'</span><span class=\"token punctuation\" >,</span> NewPatientRoute<span class=\"token punctuation\" >.</span>exit<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n\n<span class=\"token function\" >page</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'/patients/:id'</span><span class=\"token punctuation\" >,</span> PatientRoute<span class=\"token punctuation\" >.</span>enter<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\npage<span class=\"token punctuation\" >.</span><span class=\"token function\" >exit</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'/patients/:id'</span><span class=\"token punctuation\" >,</span> PatientRoute<span class=\"token punctuation\" >.</span>exit<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span></code></pre><p>Without the atomicity guard, exiting from <code>/patients/new</code> will also call the\nexit hook for <code>/patients/:id</code> since both of them match. However, the <code>enter</code>\nhook of only <code>/patients/new</code> will be invoked in case it does not call <code>next</code>\nto forward - a very common case - which could get the application into an\nundefined state.</p>\n<p>With the guard in place, however, you are assured that the <code>exit</code> hook of any\none route will be run only if its <code>enter</code> hook was run as well during the\ncurrent dispatch.</p>\n\n<h2 class=\"anchorable-heading\">\n  <a name=\"isactive\" class=\"anchorable-heading__anchor\"></a>\n  <a href=\"#isactive\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\"><code>isActive()</code>?</span>\n</h2><p>The decorator will also provide an <a href=\"##isActive\" title=\"You should use this hook any time you&#39;re performing asynchronous routines since the route may have become deactivated in the meantime.\" class=\"mega-link--internal\">API</a> for\nquerying whether the route is still active or not, which is necessary in\nasynchronous contexts where a handler may yield after the route has exited.</p>\n<p>Consider the following example:</p>\n<pre class=\"language-javascript\"><code><span class=\"token keyword\" >import</span> <span class=\"token punctuation\" >{</span> withAtomicity <span class=\"token punctuation\" >}</span> <span class=\"token keyword\" >from</span> <span class=\"token string\" >'page-fu'</span><span class=\"token punctuation\" >;</span>\n\n<span class=\"token keyword\" >export</span> <span class=\"token keyword\" >default</span> <span class=\"token function\" >withAtomicity</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span>\n  <span class=\"token function\" >enter</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    <span class=\"token function\" >fetch</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'http://www.google.com'</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >.</span><span class=\"token function\" >then</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token operator\" >=</span><span class=\"token operator\" >></span> <span class=\"token punctuation\" >{</span>\n      <span class=\"token keyword\" >if</span> <span class=\"token punctuation\" >(</span><span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span><span class=\"token function\" >isActive</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n        <span class=\"token function\" >alert</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'Response received!'</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n      <span class=\"token punctuation\" >}</span>\n    <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span>\n  <span class=\"token punctuation\" >}</span>\n<span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span></code></pre><p>Without the call to <code>isActive()</code> above, the route would&#39;ve had unwanted side-\neffects (<code>alert()</code>) had it been exited while the call to <code>fetch</code> was still\nin-flight.</p>\n","id":"withAtomicity","isModule":true,"isDefaultExportedSymbol":true,"isExportedSymbol":true,"loc":{"start":{"line":52,"column":0},"end":{"line":91,"column":1}},"line":52,"mixinTargets":[],"name":"withAtomicity","nodeInfo":{"type":"Function","params":[{"name":"instance"}]},"symbol":null,"tags":[{"type":"param","string":"","typeInfo":{"name":"route","type":{"name":"Object"}},"line":52},{"type":"return","string":"","typeInfo":{"name":"route","type":{"name":"Object"}},"line":52}],"type":"Function"},"type":"Document","meta":{"href":"/js/withAtomicity.html","anchor":"withAtomicity","htmlFilePath":"js/withAtomicity.html"},"documents":[],"entities":["0de5f06aef773c3418c5623dd00e9384"],"uid":"3e326638034aea0c4437c9ad706dcf2c","summary":"Ensure that your route's exit hook is invoked only when its enter hook was also invoked during the active dispatch. Hence, \"atomic\".","parentNodeUID":"783c78c40c77eff97ee0a4e05b9b077e","path":"js/withAtomicity","indices":{"withAtomicity":1,"/src/withAtomicity.js":1,"src/withAtomicity.js":1}},{"id":"#isActive","title":"withAtomicity#isActive","summaryFields":["description"],"filePath":"src/withAtomicity.js","loc":{"start":{"line":"?"},"end":{"line":"?"}},"properties":{"aliases":[],"description":"<p>You should use this hook any time you&#39;re performing asynchronous\nroutines since the route may have become deactivated in the meantime.</p>\n<p>For those with a background in React, this is analogous to the\n<code>isMounted()</code> API provided to their components.</p>\n","id":"withAtomicity#isActive","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":"?"},"end":{"line":"?"}},"line":"?","mixinTargets":[],"name":"isActive","nodeInfo":{"type":"Function","scope":"factory_exports","params":[]},"receiver":"withAtomicity","symbol":"#","tags":[{"type":"return","string":"Whether the route is active or not.","typeInfo":{"description":"<p>Whether the route is active or not.</p>\n","type":{"name":"Boolean","html":"Boolean"}},"line":"?"}],"type":"Function"},"indices":{"#isActive":0,"withAtomicity#isActive":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/js/withAtomicity.html##isActive","anchor":"#isActive","htmlFilePath":null},"uid":"0de5f06aef773c3418c5623dd00e9384","summary":"You should use this hook any time you're performing asynchronous routines since the route may have become deactivated in the meantime.","parentNodeUID":"3e326638034aea0c4437c9ad706dcf2c","path":"js/withAtomicity#isActive"},{"id":"withFirstClassMethods","title":"withFirstClassMethods","summaryFields":["description"],"filePath":"src/withFirstClassMethods.js","loc":{"start":{"line":40,"column":0},"end":{"line":51,"column":1}},"symbol":"","properties":{"aliases":[],"description":"<p>Create an object whose functions are permanently bound to it (i.e. &quot;first-\nclass&quot; functions).</p>\n<p>After applying this decorator, you no longer need to call <a href=\"https://deve\nloper.mozilla.org/en/docs/Web/JavaScript/Reference/Global_objects/Function/bi\nnd\" target=\"_blank\">bind</a> when you&#39;re passing around references to your route handler&#39;s functions.</p>\n<p>Example:</p>\n<pre class=\"language-javascript\"><code><span class=\"token keyword\" >import</span> <span class=\"token punctuation\" >{</span> withFirstClassMethods <span class=\"token punctuation\" >}</span> <span class=\"token keyword\" >from</span> <span class=\"token string\" >'page-fu'</span><span class=\"token punctuation\" >;</span>\n\n<span class=\"token keyword\" >class</span> <span class=\"token class-name\" >Counter</span> <span class=\"token punctuation\" >{</span>\n  <span class=\"token function\" >constructor</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    <span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span>value <span class=\"token operator\" >=</span> <span class=\"token number\" >0</span><span class=\"token punctuation\" >;</span>\n  <span class=\"token punctuation\" >}</span>\n\n  <span class=\"token function\" >increment</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    <span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span>value <span class=\"token operator\" >+</span><span class=\"token operator\" >=</span> <span class=\"token number\" >1</span><span class=\"token punctuation\" >;</span>\n  <span class=\"token punctuation\" >}</span>\n\n  <span class=\"token function\" >printValue</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    console<span class=\"token punctuation\" >.</span><span class=\"token function\" >log</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'Value = 1'</span><span class=\"token punctuation\" >)</span>\n  <span class=\"token punctuation\" >}</span>\n<span class=\"token punctuation\" >}</span>\n\n<span class=\"token keyword\" >const</span> boundCounter <span class=\"token operator\" >=</span> <span class=\"token function\" >withFirstClassMethods</span><span class=\"token punctuation\" >(</span><span class=\"token keyword\" >new</span> <span class=\"token class-name\" >Counter</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// grab references to instance functions; no need to .bind():</span>\n<span class=\"token keyword\" >const</span> <span class=\"token punctuation\" >{</span> increment <span class=\"token punctuation\" >}</span> <span class=\"token operator\" >=</span> boundCounter<span class=\"token punctuation\" >;</span>\n\n<span class=\"token function\" >increment</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span> <span class=\"token comment\" spellcheck=\"true\">// => no error!</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// pass them around:</span>\n<span class=\"token function\" >setTimeout</span><span class=\"token punctuation\" >(</span>boundCounter<span class=\"token punctuation\" >.</span>printValue<span class=\"token punctuation\" >,</span> <span class=\"token number\" >0</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span> <span class=\"token comment\" spellcheck=\"true\">// => \"Value = 1\"</span></code></pre>","id":"withFirstClassMethods","isModule":true,"isDefaultExportedSymbol":true,"isExportedSymbol":true,"loc":{"start":{"line":40,"column":0},"end":{"line":51,"column":1}},"line":40,"mixinTargets":[],"name":"withFirstClassMethods","nodeInfo":{"type":"Function","params":[{"name":"object"}]},"symbol":null,"tags":[{"type":"param","string":"","typeInfo":{"name":"object","type":{"name":"Object"}},"line":40},{"type":"return","string":"","typeInfo":{"type":{"name":"Object"}},"line":40}],"type":"Function"},"type":"Document","meta":{"href":"/js/withFirstClassMethods.html","anchor":"withFirstClassMethods","htmlFilePath":"js/withFirstClassMethods.html"},"documents":[],"entities":[],"uid":"95e519d325f9a51a6bea58544d79fc56","summary":"Create an object whose functions are permanently bound to it (i.e. \"first- class\" functions).","parentNodeUID":"783c78c40c77eff97ee0a4e05b9b077e","path":"js/withFirstClassMethods","indices":{"withFirstClassMethods":1,"/src/withFirstClassMethods.js":1,"src/withFirstClassMethods.js":1}},{"id":"withHooks","title":"withHooks","summaryFields":["description"],"filePath":"src/withHooks.js","loc":{"start":{"line":28,"column":0},"end":{"line":63,"column":1}},"symbol":"","properties":{"aliases":[],"description":"<p>Produce a route <em>object</em> that specifies both an <code>enter</code> and an <code>exit</code> hook\ngiven either a function to be used as the sole &quot;enter&quot; hook, or an object\nthat defines one or both hooks.</p>\n<pre class=\"language-javascript\"><code><span class=\"token keyword\" >import</span> <span class=\"token punctuation\" >{</span> withHooks <span class=\"token punctuation\" >}</span> <span class=\"token keyword\" >from</span> <span class=\"token string\" >'page-fu'</span><span class=\"token punctuation\" >;</span>\n\n<span class=\"token function\" >assertHasBothHooks</span><span class=\"token punctuation\" >(</span><span class=\"token function\" >withHooks</span><span class=\"token punctuation\" >(</span><span class=\"token keyword\" >function</span> <span class=\"token function\" >myEnter</span><span class=\"token punctuation\" >(</span>ctx<span class=\"token punctuation\" >,</span> next<span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span><span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >)</span>\n<span class=\"token function\" >assertHasBothHooks</span><span class=\"token punctuation\" >(</span><span class=\"token function\" >withHooks</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span> <span class=\"token function\" >enter</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span><span class=\"token punctuation\" >}</span> <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >)</span>\n<span class=\"token function\" >assertHasBothHooks</span><span class=\"token punctuation\" >(</span><span class=\"token function\" >withHooks</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span> <span class=\"token function\" >exit</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span><span class=\"token punctuation\" >}</span> <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >)</span>\n\n<span class=\"token keyword\" >function</span> <span class=\"token function\" >assertHasBothHooks</span><span class=\"token punctuation\" >(</span>route<span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n  console<span class=\"token punctuation\" >.</span><span class=\"token function\" >assert</span><span class=\"token punctuation\" >(</span><span class=\"token keyword\" >typeof</span> route <span class=\"token operator\" >===</span> <span class=\"token string\" >'object'</span><span class=\"token punctuation\" >)</span>\n  console<span class=\"token punctuation\" >.</span><span class=\"token function\" >assert</span><span class=\"token punctuation\" >(</span><span class=\"token keyword\" >typeof</span> route<span class=\"token punctuation\" >.</span>enter <span class=\"token operator\" >===</span> <span class=\"token string\" >'function'</span><span class=\"token punctuation\" >)</span>\n  console<span class=\"token punctuation\" >.</span><span class=\"token function\" >assert</span><span class=\"token punctuation\" >(</span><span class=\"token keyword\" >typeof</span> route<span class=\"token punctuation\" >.</span>exit <span class=\"token operator\" >===</span> <span class=\"token string\" >'function'</span><span class=\"token punctuation\" >)</span>\n<span class=\"token punctuation\" >}</span></code></pre>","id":"withHooks","isModule":true,"isDefaultExportedSymbol":true,"isExportedSymbol":true,"loc":{"start":{"line":28,"column":0},"end":{"line":63,"column":1}},"line":28,"mixinTargets":[],"name":"withHooks","nodeInfo":{"type":"Function","params":[]},"symbol":null,"tags":[{"type":"module","string":"Produce a route *object* that specifies both an `enter` and an `exit` hook\ngiven either a function to be used as the sole \"enter\" hook, or an object\nthat defines one or both hooks.\n\n    import { withHooks } from 'page-fu';\n\n    assertHasBothHooks(withHooks(function myEnter(ctx, next) {}))\n    assertHasBothHooks(withHooks({ enter() {} }))\n    assertHasBothHooks(withHooks({ exit() {} }))\n\n    function assertHasBothHooks(route) {\n      console.assert(typeof route === 'object')\n      console.assert(typeof route.enter === 'function')\n      console.assert(typeof route.exit === 'function')\n    }","typeInfo":{"name":null,"description":null,"isOptional":null,"defaultValue":null,"type":null},"line":28},{"type":"param","string":"","typeInfo":{"name":"spec","type":{"name":"Union","elements":[{"name":"Function"},{"name":"Object"}]}},"line":28},{"type":"return","string":"","typeInfo":{"name":"route","type":{"name":"Object"}},"line":28},{"type":"return","string":"","typeInfo":{"name":"route.enter","type":{"name":"Function"}},"line":28},{"type":"return","string":"","typeInfo":{"name":"route.exit","type":{"name":"Function"}},"line":28}],"type":"Function"},"type":"Document","meta":{"href":"/js/withHooks.html","anchor":"withHooks","htmlFilePath":"js/withHooks.html"},"documents":[],"entities":["cd2aab8e15a516029f335788f8a51d96","688e5756d0b29077e12631eb48c396da"],"uid":"685406d8925441c41fd12357a242661f","summary":"Produce a route object that specifies both an enter and an exit hook given either a function to be used as the sole \"enter\" hook, or an object that defines one or both hooks.","parentNodeUID":"783c78c40c77eff97ee0a4e05b9b077e","path":"js/withHooks","indices":{"withHooks":1,"/src/withHooks.js":1,"src/withHooks.js":1}},{"id":"#enter","title":"withHooks#enter","summaryFields":["description"],"filePath":"src/withHooks.js","loc":{"start":{"line":41,"column":6},"end":{"line":41,"column":17}},"properties":{"aliases":[],"description":"<p>The <code>enter</code> routine that gets called when the route is activated.</p>\n","id":"withHooks#enter","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":41,"column":6},"end":{"line":41,"column":17}},"line":41,"mixinTargets":[],"name":"enter","nodeInfo":{"type":"Unknown","scope":"factory_exports"},"receiver":"withHooks","symbol":"#","tags":[{"type":"type","string":"The `enter` routine that gets called when the route is activated.","typeInfo":{"description":"<p>The <code>enter</code> routine that gets called when the route is activated.</p>\n","type":{"name":"Function"}},"line":41},{"type":"param","string":"","typeInfo":{"name":"ctx","type":{"name":"page.Context","html":"<a target=\"_blank\" href=\"https://visionmedia.github.io/page.js/#context\">page.Context</a>"}},"line":41},{"type":"param","string":"Call this if you do not want to activate the route and instead\nforward to the next one.","typeInfo":{"name":"next","description":"<p>Call this if you do not want to activate the route and instead\nforward to the next one.</p>\n","type":{"name":"Function"}},"line":41}],"type":"Function"},"indices":{"#enter":0,"withHooks#enter":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/js/withHooks.html##enter","anchor":"#enter","htmlFilePath":null},"uid":"cd2aab8e15a516029f335788f8a51d96","summary":"The enter routine that gets called when the route is activated.","parentNodeUID":"685406d8925441c41fd12357a242661f","path":"js/withHooks#enter"},{"id":"#exit","title":"withHooks#exit","summaryFields":["description"],"filePath":"src/withHooks.js","loc":{"start":{"line":54,"column":6},"end":{"line":54,"column":23}},"properties":{"aliases":[],"description":"<p>The routine that gets called when the route is about to become\ndeactivated.</p>\n","id":"withHooks#exit","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":54,"column":6},"end":{"line":54,"column":23}},"line":54,"mixinTargets":[],"name":"exit","nodeInfo":{"type":"Function","scope":"factory_exports","params":[{"name":"ctx"},{"name":"next"}]},"receiver":"withHooks","symbol":"#","tags":[{"type":"param","string":"page.js context object.","typeInfo":{"name":"ctx","description":"<p>page.js context object.</p>\n","type":{"name":"page.Context","html":"<a target=\"_blank\" href=\"https://visionmedia.github.io/page.js/#context\">page.Context</a>"}},"line":54},{"type":"param","string":"Function to invoke when you're done cleaning up. If you do not\ncall this, the route will never be exited.","typeInfo":{"name":"next","description":"<p>Function to invoke when you&#39;re done cleaning up. If you do not\ncall this, the route will never be exited.</p>\n","type":{"name":"Function"}},"line":54}],"type":"Function"},"indices":{"#exit":0,"withHooks#exit":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/js/withHooks.html##exit","anchor":"#exit","htmlFilePath":null},"uid":"688e5756d0b29077e12631eb48c396da","summary":"The routine that gets called when the route is about to become deactivated.","parentNodeUID":"685406d8925441c41fd12357a242661f","path":"js/withHooks#exit"},{"id":"withProps","title":"withProps","summaryFields":["description"],"filePath":"src/withProps.js","loc":{"start":{"line":47,"column":0},"end":{"line":111,"column":1}},"symbol":"","properties":{"aliases":[],"description":"<p>Inject named parameters and query parameters as &quot;<a href=\"#@props\" class=\"mega-link--internal\">props</a>&quot;\ninto your route.</p>\n<pre class=\"language-javascript\"><code><span class=\"token keyword\" >import</span> <span class=\"token punctuation\" >{</span> withProps <span class=\"token punctuation\" >}</span> <span class=\"token keyword\" >from</span> <span class=\"token string\" >'page-fu'</span>\n<span class=\"token keyword\" >import</span> page <span class=\"token keyword\" >from</span> <span class=\"token string\" >'page'</span>\n\n<span class=\"token keyword\" >const</span> Route <span class=\"token operator\" >=</span> <span class=\"token function\" >withProps</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span>\n  <span class=\"token function\" >enter</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    console<span class=\"token punctuation\" >.</span><span class=\"token function\" >log</span><span class=\"token punctuation\" >(</span><span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span>props<span class=\"token punctuation\" >.</span>params<span class=\"token punctuation\" >)</span>\n    console<span class=\"token punctuation\" >.</span><span class=\"token function\" >log</span><span class=\"token punctuation\" >(</span><span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span>props<span class=\"token punctuation\" >.</span>query<span class=\"token punctuation\" >)</span>\n  <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span>\n\n  <span class=\"token function\" >queryParamsDidChange</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    console<span class=\"token punctuation\" >.</span><span class=\"token function\" >log</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'woah!'</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n  <span class=\"token punctuation\" >}</span>\n<span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span>\n\n<span class=\"token function\" >page</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'/users/:userId'</span><span class=\"token punctuation\" >,</span> Route<span class=\"token punctuation\" >.</span>enter<span class=\"token punctuation\" >)</span>\npage<span class=\"token punctuation\" >.</span><span class=\"token function\" >exit</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'/users/:userId'</span><span class=\"token punctuation\" >,</span> Route<span class=\"token punctuation\" >.</span>exit<span class=\"token punctuation\" >)</span>\n\nlocation<span class=\"token punctuation\" >.</span>hash <span class=\"token operator\" >=</span> <span class=\"token string\" >'#/users/1?nameFilter=a'</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// => { userId: \"1\" }</span>\n<span class=\"token comment\" spellcheck=\"true\">// => { nameFilter: \"a\" }</span>\n\nlocation<span class=\"token punctuation\" >.</span>hash <span class=\"token operator\" >=</span> <span class=\"token string\" >'#/users/1?nameFilter=b'</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// => \"woah!\"</span></code></pre><blockquote>\n<p><strong>Note on changes to query parameters</strong></p>\n<p>Unlike other libraries that choose to monkey-patch <code>window.history</code> in\norder to sniff changes to the URL and then re-parse the query, page-fu\nexpects you to use its APIs to modify the queryString where it will\ninternally take care of propagating those changes up to the location bar\nand down to your routes.</p>\n</blockquote>\n","id":"withProps","isModule":true,"isDefaultExportedSymbol":true,"isExportedSymbol":true,"loc":{"start":{"line":47,"column":0},"end":{"line":111,"column":1}},"line":47,"mixinTargets":[],"name":"withProps","nodeInfo":{"type":"Function","params":[{"name":"instance"}]},"symbol":null,"tags":[{"type":"param","string":"","typeInfo":{"name":"route","type":{"name":"Object"}},"line":47},{"type":"return","string":"","typeInfo":{"type":{"name":"Object"}},"line":47}],"type":"Function"},"type":"Document","meta":{"href":"/js/withProps.html","anchor":"withProps","htmlFilePath":"js/withProps.html"},"documents":[],"entities":["e2bbef43120c2ed82d2480b30b8365b4","134f14793769e35e107f02f707cc230b"],"uid":"0b01744be800c641ecdbba8b9ef85fba","summary":"Inject named parameters and query parameters as \"[[props | withProps@props]]\" into your route.","parentNodeUID":"783c78c40c77eff97ee0a4e05b9b077e","path":"js/withProps","indices":{"withProps":1,"/src/withProps.js":1,"src/withProps.js":1}},{"id":"@props","title":"withProps@props","summaryFields":["description"],"filePath":"src/withProps.js","loc":{"start":{"line":67,"column":4},"end":{"line":67,"column":15}},"properties":{"aliases":[],"description":"","id":"withProps@props","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":67,"column":4},"end":{"line":67,"column":15}},"line":67,"mixinTargets":[],"name":"props","nodeInfo":{"type":"Literal","scope":"factory_exports"},"receiver":"withProps","symbol":"@","tags":[{"type":"property","string":"","typeInfo":{"name":"props","type":{"name":"Object"},"isOptional":true,"defaultValue":"{}"},"line":67},{"type":"property","string":"The parameters that the route was activated with (that is, what's\nfound in `ctx.params` from page's context.)","typeInfo":{"name":"props.params","description":"<p>The parameters that the route was activated with (that is, what&#39;s\nfound in <code>ctx.params</code> from page&#39;s context.)</p>\n","type":{"name":"Object","elements":[{"name":"String","html":"String"},{"name":"String","html":"String"}]}},"line":67},{"type":"property","string":"The current query parameters.","typeInfo":{"name":"props.query","description":"<p>The current query parameters.</p>\n","type":{"name":"Object","elements":[{"name":"String","html":"String"},{"name":"String","html":"String"}]}},"line":67},{"type":"property","string":"","typeInfo":{"name":"props.location","type":{"name":"Object"}},"line":67},{"type":"property","string":"","typeInfo":{"name":"props.location.pathname","type":{"name":"String","html":"String"}},"line":67}],"type":"Object"},"indices":{"@props":0,"withProps@props":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/js/withProps.html#@props","anchor":"@props","htmlFilePath":null},"uid":"e2bbef43120c2ed82d2480b30b8365b4","parentNodeUID":"0b01744be800c641ecdbba8b9ef85fba","path":"js/withProps@props"},{"id":"#queryParamsDidChange","title":"withProps#queryParamsDidChange","summaryFields":["description"],"filePath":"src/withProps.js","loc":{"start":{"line":75,"column":4},"end":{"line":75,"column":77}},"properties":{"aliases":[],"description":"<p>A hook that will be invoked when the query parameters change through\ncalls to <a href=\"Router.html#.updateQuery\" title=\"Partially update the queryString according to a set of rules:\" class=\"mega-link--internal\">Router.updateQuery</a> or <a href=\"Router.html#.replaceQuery\" title=\"Replace the queryString fully with the next representation. null values will be removed from the resulting queryString.\" class=\"mega-link--internal\">Router.replaceQuery</a>.</p>\n","id":"withProps#queryParamsDidChange","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":75,"column":4},"end":{"line":75,"column":77}},"line":75,"mixinTargets":[],"name":"queryParamsDidChange","nodeInfo":{"type":"Unknown","scope":"prototype"},"receiver":"withProps","symbol":"#","tags":[{"type":"method","string":"A hook that will be invoked when the query parameters change through\ncalls to [[Router.updateQuery]] or [[Router.replaceQuery]].","typeInfo":{"description":"<p>A hook that will be invoked when the query parameters change through\ncalls to <a href=\"Router.html#.updateQuery\" title=\"Partially update the queryString according to a set of rules:\" class=\"mega-link--internal\">Router.updateQuery</a> or <a href=\"Router.html#.replaceQuery\" title=\"Replace the queryString fully with the next representation. null values will be removed from the resulting queryString.\" class=\"mega-link--internal\">Router.replaceQuery</a>.</p>\n","type":{"name":"Function"}},"line":75}],"type":"Function"},"indices":{"#queryParamsDidChange":0,"withProps#queryParamsDidChange":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/js/withProps.html##queryParamsDidChange","anchor":"#queryParamsDidChange","htmlFilePath":null},"uid":"134f14793769e35e107f02f707cc230b","summary":"A hook that will be invoked when the query parameters change through calls to [[Router.updateQuery]] or [[Router.replaceQuery]].","parentNodeUID":"0b01744be800c641ecdbba8b9ef85fba","path":"js/withProps#queryParamsDidChange"},{"id":"withRoutingAPIs","title":"withRoutingAPIs","summaryFields":["description"],"filePath":"src/withRoutingAPIs.js","loc":{"start":{"line":22,"column":0},"end":{"line":48,"column":1}},"symbol":"","properties":{"aliases":[],"description":"<p>A cute and simple decorator that allows direct access to the <a href=\"Router.html\" title=\"This module exposes APIs to perform routing side-effects via page.js.\" class=\"mega-link--internal\">router</a>&#39;s primary routines.</p>\n<p>For example:</p>\n<pre class=\"language-javascript\"><code><span class=\"token keyword\" >import</span> <span class=\"token punctuation\" >{</span> withRoutingAPIs <span class=\"token punctuation\" >}</span> <span class=\"token keyword\" >from</span> <span class=\"token string\" >'page-fu'</span><span class=\"token punctuation\" >;</span>\n\n<span class=\"token keyword\" >export</span> <span class=\"token keyword\" >default</span> <span class=\"token function\" >withRoutingAPIs</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span>\n  <span class=\"token function\" >enter</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    <span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span><span class=\"token function\" >transitionTo</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'/foo'</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span> <span class=\"token comment\" spellcheck=\"true\">// => Router.transitionTo('/foo');</span>\n  <span class=\"token punctuation\" >}</span>\n<span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span></code></pre>","id":"withRoutingAPIs","isModule":true,"isDefaultExportedSymbol":true,"isExportedSymbol":true,"loc":{"start":{"line":22,"column":0},"end":{"line":48,"column":1}},"line":22,"mixinTargets":[],"name":"withRoutingAPIs","nodeInfo":{"type":"Function","params":[{"name":"instance"}]},"symbol":null,"tags":[{"type":"module","string":"A cute and simple decorator that allows direct access to the [[router |\nRouter]]'s primary routines.\n\nFor example:\n\n    import { withRoutingAPIs } from 'page-fu';\n\n    export default withRoutingAPIs({\n      enter() {\n        this.transitionTo('/foo'); // => Router.transitionTo('/foo');\n      }\n    })","typeInfo":{"name":"withRoutingAPIs","description":null,"isOptional":null,"defaultValue":null,"type":null},"line":22},{"type":"param","string":"","typeInfo":{"name":"route","type":{"name":"Object"}},"line":22},{"type":"return","string":"","typeInfo":{"name":"route","type":{"name":"Object"}},"line":22}],"type":"Function"},"type":"Document","meta":{"href":"/js/withRoutingAPIs.html","anchor":"withRoutingAPIs","htmlFilePath":"js/withRoutingAPIs.html"},"documents":[],"entities":["4d3ffe2a29d65c2e899bd8ceb06c399c","8d4799618f5fa66648e0b9c7d88e31fa","6d8984a2c4e8be59910c604958561bc1","9ec6602578bf8a2dff31634714157fec"],"uid":"898617e738fe947bcb4fd7d3f92c5c20","summary":"A cute and simple decorator that allows direct access to the [[router | Router]]'s primary routines.","parentNodeUID":"783c78c40c77eff97ee0a4e05b9b077e","path":"js/withRoutingAPIs","indices":{"withRoutingAPIs":1,"/src/withRoutingAPIs.js":1,"src/withRoutingAPIs.js":1}},{"id":"#redirectTo","title":"withRoutingAPIs#redirectTo","summaryFields":["description"],"filePath":"src/withRoutingAPIs.js","loc":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"properties":{"aliases":[],"description":"<p>Forwards to <a href=\"Router.html#.redirectTo\" title=\"Transition to a different page and replace the current history entry.\" class=\"mega-link--internal\">Router.redirectTo</a></p>\n","id":"withRoutingAPIs#redirectTo","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"line":28,"mixinTargets":[],"name":"redirectTo","nodeInfo":{"type":"Unknown","scope":"factory_exports"},"receiver":"withRoutingAPIs","symbol":"#","tags":[{"type":"type","string":"Forwards to [[Router.redirectTo]]","typeInfo":{"name":"redirectTo","description":"<p>Forwards to <a href=\"Router.html#.redirectTo\" title=\"Transition to a different page and replace the current history entry.\" class=\"mega-link--internal\">Router.redirectTo</a></p>\n","type":{"name":"Function"}},"line":28}],"type":"Function"},"indices":{"#redirectTo":0,"withRoutingAPIs#redirectTo":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/js/withRoutingAPIs.html##redirectTo","anchor":"#redirectTo","htmlFilePath":null},"uid":"4d3ffe2a29d65c2e899bd8ceb06c399c","summary":"Forwards to [[Router.redirectTo]]","parentNodeUID":"898617e738fe947bcb4fd7d3f92c5c20","path":"js/withRoutingAPIs#redirectTo"},{"id":"#replaceQuery","title":"withRoutingAPIs#replaceQuery","summaryFields":["description"],"filePath":"src/withRoutingAPIs.js","loc":{"start":{"line":34,"column":4},"end":{"line":34,"column":16}},"properties":{"aliases":[],"description":"<p>Forwards to <a href=\"Router.html#.replaceQuery\" title=\"Replace the queryString fully with the next representation. null values will be removed from the resulting queryString.\" class=\"mega-link--internal\">Router.replaceQuery</a></p>\n","id":"withRoutingAPIs#replaceQuery","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":34,"column":4},"end":{"line":34,"column":16}},"line":34,"mixinTargets":[],"name":"replaceQuery","nodeInfo":{"type":"Unknown","scope":"factory_exports"},"receiver":"withRoutingAPIs","symbol":"#","tags":[{"type":"type","string":"Forwards to [[Router.replaceQuery]]","typeInfo":{"name":"replaceQuery","description":"<p>Forwards to <a href=\"Router.html#.replaceQuery\" title=\"Replace the queryString fully with the next representation. null values will be removed from the resulting queryString.\" class=\"mega-link--internal\">Router.replaceQuery</a></p>\n","type":{"name":"Function"}},"line":34}],"type":"Function"},"indices":{"#replaceQuery":0,"withRoutingAPIs#replaceQuery":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/js/withRoutingAPIs.html##replaceQuery","anchor":"#replaceQuery","htmlFilePath":null},"uid":"8d4799618f5fa66648e0b9c7d88e31fa","summary":"Forwards to [[Router.replaceQuery]]","parentNodeUID":"898617e738fe947bcb4fd7d3f92c5c20","path":"js/withRoutingAPIs#replaceQuery"},{"id":"#transitionTo","title":"withRoutingAPIs#transitionTo","summaryFields":["description"],"filePath":"src/withRoutingAPIs.js","loc":{"start":{"line":40,"column":4},"end":{"line":40,"column":16}},"properties":{"aliases":[],"description":"<p>Forwards to <a href=\"Router.html#.transitionTo\" title=\"Transition to a different page.\" class=\"mega-link--internal\">Router.transitionTo</a></p>\n","id":"withRoutingAPIs#transitionTo","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":40,"column":4},"end":{"line":40,"column":16}},"line":40,"mixinTargets":[],"name":"transitionTo","nodeInfo":{"type":"Unknown","scope":"factory_exports"},"receiver":"withRoutingAPIs","symbol":"#","tags":[{"type":"type","string":"Forwards to [[Router.transitionTo]]","typeInfo":{"name":"transitionTo","description":"<p>Forwards to <a href=\"Router.html#.transitionTo\" title=\"Transition to a different page.\" class=\"mega-link--internal\">Router.transitionTo</a></p>\n","type":{"name":"Function"}},"line":40}],"type":"Function"},"indices":{"#transitionTo":0,"withRoutingAPIs#transitionTo":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/js/withRoutingAPIs.html##transitionTo","anchor":"#transitionTo","htmlFilePath":null},"uid":"6d8984a2c4e8be59910c604958561bc1","summary":"Forwards to [[Router.transitionTo]]","parentNodeUID":"898617e738fe947bcb4fd7d3f92c5c20","path":"js/withRoutingAPIs#transitionTo"},{"id":"#updateQuery","title":"withRoutingAPIs#updateQuery","summaryFields":["description"],"filePath":"src/withRoutingAPIs.js","loc":{"start":{"line":46,"column":4},"end":{"line":46,"column":15}},"properties":{"aliases":[],"description":"<p>Forwards to <a href=\"Router.html#.updateQuery\" title=\"Partially update the queryString according to a set of rules:\" class=\"mega-link--internal\">Router.updateQuery</a></p>\n","id":"withRoutingAPIs#updateQuery","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":46,"column":4},"end":{"line":46,"column":15}},"line":46,"mixinTargets":[],"name":"updateQuery","nodeInfo":{"type":"Unknown","scope":"factory_exports"},"receiver":"withRoutingAPIs","symbol":"#","tags":[{"type":"type","string":"Forwards to [[Router.updateQuery]]","typeInfo":{"name":"updateQuery","description":"<p>Forwards to <a href=\"Router.html#.updateQuery\" title=\"Partially update the queryString according to a set of rules:\" class=\"mega-link--internal\">Router.updateQuery</a></p>\n","type":{"name":"Function"}},"line":46}],"type":"Function"},"indices":{"#updateQuery":0,"withRoutingAPIs#updateQuery":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/js/withRoutingAPIs.html##updateQuery","anchor":"#updateQuery","htmlFilePath":null},"uid":"9ec6602578bf8a2dff31634714157fec","summary":"Forwards to [[Router.updateQuery]]","parentNodeUID":"898617e738fe947bcb4fd7d3f92c5c20","path":"js/withRoutingAPIs#updateQuery"},{"id":"withState","title":"withState","summaryFields":["description"],"filePath":"src/withState.js","loc":{"start":{"line":43,"column":0},"end":{"line":118,"column":1}},"symbol":"","properties":{"aliases":[],"description":"<p>Decorate your route with the ability to transition between (internal) states.\nThat state will be purged upon entering and exiting the route so you do not\nneed to manage it.</p>\n<p>Here&#39;s an example that tracks an internal counter and outputs it to the\nconsole when it changes:</p>\n<pre class=\"language-javascript\"><code><span class=\"token keyword\" >import</span> <span class=\"token punctuation\" >{</span> withState <span class=\"token punctuation\" >}</span> <span class=\"token keyword\" >from</span> <span class=\"token string\" >'page-fu'</span><span class=\"token punctuation\" >;</span>\n\n<span class=\"token keyword\" >export</span> <span class=\"token keyword\" >default</span> <span class=\"token function\" >withState</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span>\n  <span class=\"token function\" >getInitialState</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    <span class=\"token keyword\" >return</span> <span class=\"token punctuation\" >{</span> value<span class=\"token punctuation\" >:</span> <span class=\"token number\" >0</span> <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >;</span>\n  <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span>\n\n  <span class=\"token function\" >enter</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    <span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span><span class=\"token function\" >renderValue</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span> <span class=\"token comment\" spellcheck=\"true\">// => \"Value = 0\"</span>\n    <span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span><span class=\"token function\" >increment</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n  <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span>\n\n  <span class=\"token function\" >stateDidChange</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    <span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span><span class=\"token function\" >renderValue</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span> <span class=\"token comment\" spellcheck=\"true\">// => \"Value = 1\"</span>\n  <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span>\n\n  <span class=\"token function\" >renderValue</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    console<span class=\"token punctuation\" >.</span><span class=\"token function\" >log</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'Value = %d'</span><span class=\"token punctuation\" >,</span> <span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span>state<span class=\"token punctuation\" >.</span>value<span class=\"token punctuation\" >)</span>\n  <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span>\n\n  <span class=\"token function\" >increment</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    <span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span><span class=\"token function\" >setState</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span>\n      value<span class=\"token punctuation\" >:</span> <span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span>state<span class=\"token punctuation\" >.</span>value <span class=\"token operator\" >+</span> <span class=\"token number\" >1</span>\n    <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n  <span class=\"token punctuation\" >}</span>\n<span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span></code></pre>","id":"withState","isModule":true,"isDefaultExportedSymbol":true,"isExportedSymbol":true,"loc":{"start":{"line":43,"column":0},"end":{"line":118,"column":1}},"line":43,"mixinTargets":[],"name":"withState","nodeInfo":{"type":"Function","params":[{"name":"instance"}]},"symbol":null,"tags":[{"type":"preserveOrder","string":"Decorate your route with the ability to transition between (internal) states.\nThat state will be purged upon entering and exiting the route so you do not\nneed to manage it.\n\nHere's an example that tracks an internal counter and outputs it to the\nconsole when it changes:\n\n    import { withState } from 'page-fu';\n\n    export default withState({\n      getInitialState() {\n        return { value: 0 };\n      },\n\n      enter() {\n        this.renderValue(); // => \"Value = 0\"\n        this.increment();\n      },\n\n      stateDidChange() {\n        this.renderValue(); // => \"Value = 1\"\n      },\n\n      renderValue() {\n        console.log('Value = %d', this.state.value)\n      },\n\n      increment() {\n        this.setState({\n          value: this.state.value + 1\n        });\n      }\n    })","typeInfo":{"name":null,"description":null,"isOptional":null,"defaultValue":null,"type":null},"line":43},{"type":"param","string":"","typeInfo":{"name":"instance","type":{"name":"Route","html":"<a class=\"mega-link--internal\" href=\"Route.html\" title=\"Create a &quot;route handler&quot; equipped with all the capabilities provided by page-fu:\">Route</a>"}},"line":43},{"type":"return","string":"","typeInfo":{"type":{"name":"Route","html":"<a class=\"mega-link--internal\" href=\"Route.html\" title=\"Create a &quot;route handler&quot; equipped with all the capabilities provided by page-fu:\">Route</a>"}},"line":43}],"type":"Function"},"type":"Document","meta":{"href":"/js/withState.html","anchor":"withState","htmlFilePath":"js/withState.html"},"documents":[],"entities":["a4f2ddda1c55c19db244d0549c370bb5","c43c817bce76c75796993cbdf28cd668","1f0c6c2c4bbad6514db4fb8dc22e7781","a84961c574239026b9e8685d1ef61cf8","474c3fe4e9c92e0940b89f6003c7bb9e","4dbbe1429ace52b5e45b0b83fd7f61e6","950c2fb81afbe21cf8398acaeacbd774"],"uid":"a4868be3e8a4797247c8f74c8f34a69b","summary":"Decorate your route with the ability to transition between (internal) states. That state will be purged upon entering and exiting the route so you do not need to manage it.","parentNodeUID":"783c78c40c77eff97ee0a4e05b9b077e","path":"js/withState","indices":{"withState":1,"/src/withState.js":1,"src/withState.js":1}},{"id":"@state","title":"withState@state","summaryFields":["description"],"filePath":"src/withState.js","loc":{"start":{"line":70,"column":4},"end":{"line":70,"column":15}},"properties":{"aliases":[],"description":"","id":"withState@state","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":70,"column":4},"end":{"line":70,"column":15}},"line":70,"mixinTargets":[],"name":"state","nodeInfo":{"type":"Literal","scope":"factory_exports"},"receiver":"withState","symbol":"@","tags":[{"type":"property","string":"The route's internal state which can be mutated using the state routines.","typeInfo":{"description":"<p>The route&#39;s internal state which can be mutated using the state routines.</p>\n","type":{"name":"Object"}},"line":70}],"type":"Object"},"indices":{"@state":0,"withState@state":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/js/withState.html#@state","anchor":"@state","htmlFilePath":null},"uid":"a4f2ddda1c55c19db244d0549c370bb5","parentNodeUID":"a4868be3e8a4797247c8f74c8f34a69b","path":"js/withState@state"},{"id":"#getInitialState","title":"withState#getInitialState","summaryFields":["description"],"filePath":"src/withState.js","loc":{"start":{"line":81,"column":4},"end":{"line":81,"column":67}},"properties":{"aliases":[],"description":"<p>A producer for the initial state the container should start in. The\noutput of this method will be used when clearing the container as well.</p>\n","id":"withState#getInitialState","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":81,"column":4},"end":{"line":81,"column":67}},"line":81,"mixinTargets":[],"name":"getInitialState","nodeInfo":{"type":"Unknown","scope":"prototype"},"receiver":"withState","symbol":"#","tags":[{"type":"method","string":"A producer for the initial state the container should start in. The\noutput of this method will be used when clearing the container as well.","typeInfo":{"description":"<p>A producer for the initial state the container should start in. The\noutput of this method will be used when clearing the container as well.</p>\n","type":{"name":"Function"}},"line":81},{"type":"return","string":"The initial state definition.","typeInfo":{"description":"<p>The initial state definition.</p>\n","type":{"name":"Object"}},"line":81}],"type":"Function"},"indices":{"#getInitialState":0,"withState#getInitialState":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/js/withState.html##getInitialState","anchor":"#getInitialState","htmlFilePath":null},"uid":"c43c817bce76c75796993cbdf28cd668","summary":"A producer for the initial state the container should start in. The output of this method will be used when clearing the container as well.","parentNodeUID":"a4868be3e8a4797247c8f74c8f34a69b","path":"js/withState#getInitialState"},{"id":"#setState","title":"withState#setState","summaryFields":["description"],"filePath":"src/withState.js","loc":{"start":{"line":"?"},"end":{"line":"?"}},"properties":{"aliases":[],"description":"<p>Transition to a new state, overwriting any existing keys.</p>\n","id":"withState#setState","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":"?"},"end":{"line":"?"}},"line":"?","mixinTargets":[],"name":"setState","nodeInfo":{"type":"Function","scope":"factory_exports","params":[{"name":"partialState"}]},"receiver":"withState","symbol":"#","tags":[{"type":"param","string":"","typeInfo":{"name":"partialState","type":{"name":"Object"}},"line":"?"}],"type":"Function"},"indices":{"#setState":0,"withState#setState":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/js/withState.html##setState","anchor":"#setState","htmlFilePath":null},"uid":"1f0c6c2c4bbad6514db4fb8dc22e7781","summary":"Transition to a new state, overwriting any existing keys.","parentNodeUID":"a4868be3e8a4797247c8f74c8f34a69b","path":"js/withState#setState"},{"id":"#replaceState","title":"withState#replaceState","summaryFields":["description"],"filePath":"src/withState.js","loc":{"start":{"line":"?"},"end":{"line":"?"}},"properties":{"aliases":[],"description":"<p>Transition to an entirely new state, replacing the old one.</p>\n","id":"withState#replaceState","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":"?"},"end":{"line":"?"}},"line":"?","mixinTargets":[],"name":"replaceState","nodeInfo":{"type":"Function","scope":"factory_exports","params":[{"name":"newState"}]},"receiver":"withState","symbol":"#","tags":[{"type":"param","string":"","typeInfo":{"name":"newState","type":{"name":"Object"}},"line":"?"}],"type":"Function"},"indices":{"#replaceState":0,"withState#replaceState":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/js/withState.html##replaceState","anchor":"#replaceState","htmlFilePath":null},"uid":"a84961c574239026b9e8685d1ef61cf8","summary":"Transition to an entirely new state, replacing the old one.","parentNodeUID":"a4868be3e8a4797247c8f74c8f34a69b","path":"js/withState#replaceState"},{"id":"#clearState","title":"withState#clearState","summaryFields":["description"],"filePath":"src/withState.js","loc":{"start":{"line":"?"},"end":{"line":"?"}},"properties":{"aliases":[],"description":"<p>Reset the state.</p>\n","id":"withState#clearState","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":"?"},"end":{"line":"?"}},"line":"?","mixinTargets":[],"name":"clearState","nodeInfo":{"type":"Function","scope":"factory_exports","params":[]},"receiver":"withState","symbol":"#","tags":[],"type":"Function"},"indices":{"#clearState":0,"withState#clearState":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/js/withState.html##clearState","anchor":"#clearState","htmlFilePath":null},"uid":"474c3fe4e9c92e0940b89f6003c7bb9e","summary":"Reset the state.","parentNodeUID":"a4868be3e8a4797247c8f74c8f34a69b","path":"js/withState#clearState"},{"id":"#stateDidChange","title":"withState#stateDidChange","summaryFields":["description"],"filePath":"src/withState.js","loc":{"start":{"line":116,"column":4},"end":{"line":116,"column":65}},"properties":{"aliases":[],"description":"<p>A hook that is invoked when the state changes through calls to\n<a href=\"##setState\" title=\"Transition to a new state, overwriting any existing keys.\" class=\"mega-link--internal\">withState#setState</a>, <a href=\"##replaceState\" title=\"Transition to an entirely new state, replacing the old one.\" class=\"mega-link--internal\">withState#replaceState</a> or <a href=\"##clearState\" title=\"Reset the state.\" class=\"mega-link--internal\">withState#clearState</a>.</p>\n","id":"withState#stateDidChange","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":false,"loc":{"start":{"line":116,"column":4},"end":{"line":116,"column":65}},"line":116,"mixinTargets":[],"name":"stateDidChange","nodeInfo":{"type":"Unknown","scope":"prototype"},"receiver":"withState","symbol":"#","tags":[{"type":"method","string":"A hook that is invoked when the state changes through calls to\n[[#setState]], [[#replaceState]] or [[#clearState]].","typeInfo":{"description":"<p>A hook that is invoked when the state changes through calls to\n<a href=\"##setState\" title=\"Transition to a new state, overwriting any existing keys.\" class=\"mega-link--internal\">withState#setState</a>, <a href=\"##replaceState\" title=\"Transition to an entirely new state, replacing the old one.\" class=\"mega-link--internal\">withState#replaceState</a> or <a href=\"##clearState\" title=\"Reset the state.\" class=\"mega-link--internal\">withState#clearState</a>.</p>\n","type":{"name":"Function"}},"line":116},{"type":"param","string":"","typeInfo":{"name":"prevState","type":{"name":"Object"}},"line":116}],"type":"Function"},"indices":{"#stateDidChange":0,"withState#stateDidChange":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/js/withState.html##stateDidChange","anchor":"#stateDidChange","htmlFilePath":null},"uid":"4dbbe1429ace52b5e45b0b83fd7f61e6","summary":"A hook that is invoked when the state changes through calls to [[#setState]], [[#replaceState]] or [[#clearState]].","parentNodeUID":"a4868be3e8a4797247c8f74c8f34a69b","path":"js/withState#stateDidChange"},{"id":".StateTransaction","title":"withState.StateTransaction","summaryFields":["description"],"filePath":"src/withState.js","loc":{"start":{"line":145,"column":0},"end":{"line":176,"column":1}},"properties":{"aliases":[],"description":"<p>Freeze the state and all changes to it throughout a function. All calls to\n<a href=\"##setState\" title=\"Transition to a new state, overwriting any existing keys.\" class=\"mega-link--internal\">withState#setState</a> and <a href=\"##replaceState\" title=\"Transition to an entirely new state, replacing the old one.\" class=\"mega-link--internal\">withState#replaceState</a> will be buffered until the function\nreturns, at which point they will be &quot;replayed&quot; but cause only one change\nto be triggered (<a href=\"##stateDidChange\" title=\"A hook that is invoked when the state changes through calls to [[#setState]], [[#replaceState]] or [[#clearState]].\" class=\"mega-link--internal\">withState#stateDidChange</a>.)</p>\n","id":"withState.StateTransaction","isModule":false,"isDefaultExportedSymbol":false,"isExportedSymbol":true,"loc":{"start":{"line":145,"column":0},"end":{"line":176,"column":1}},"line":145,"mixinTargets":[],"name":"StateTransaction","nodeInfo":{"type":"Function","params":[{"name":"route"},{"name":"f"}]},"receiver":"withState","symbol":".","tags":[{"type":"param","string":"","typeInfo":{"name":"route","type":{"name":"Route","html":"<a class=\"mega-link--internal\" href=\"Route.html\" title=\"Create a &quot;route handler&quot; equipped with all the capabilities provided by page-fu:\">Route</a>"}},"line":145},{"type":"param","string":"","typeInfo":{"name":"f","type":{"name":"Function"}},"line":145}],"type":"Function"},"indices":{".StateTransaction":0,"withState.StateTransaction":1},"indexFields":["$uid","id","aliases"],"type":"DocumentEntity","meta":{"href":"/js/withState.html#.StateTransaction","anchor":".StateTransaction","htmlFilePath":null},"uid":"950c2fb81afbe21cf8398acaeacbd774","summary":"Freeze the state and all changes to it throughout a function. All calls to [[#setState]] and [[#replaceState]] will be buffered until the function returns, at which point they will be \"replayed\" but cause only one change to be triggered ([[#stateDidChange]].)","parentNodeUID":"a4868be3e8a4797247c8f74c8f34a69b","path":"js/withState.StateTransaction"},{"id":"articles","name":"megadoc-plugin-markdown","title":"Articles","meta":{"href":"/index.html","defaultLayouts":[{"match":{"by":"type","on":["Document","DocumentEntity"]},"regions":[{"name":"Core::Content","options":{"framed":true},"outlets":[{"name":"Markdown::Document"},{"name":"Core::Content"}]},{"name":"Core::Sidebar","outlets":[{"name":"Markdown::Browser"},{"name":"Core::Sidebar"}]}]},{"match":{"by":"type","on":["Namespace"]},"regions":[{"name":"Core::Sidebar","outlets":[{"name":"Markdown::Browser"}]}]}],"anchor":"articles","htmlFilePath":"index.html"},"config":{"id":"articles","title":"Articles","baseURL":"/","fullFolderTitles":false,"fullFolderTitleDelimiter":" - ","allowLeadingSlashInLinks":true,"generateMissingHeadings":true,"discardIdPrefix":"doc-","discardFileExtension":true,"sanitize":true,"titleOverrides":{},"preformat":{},"strict":false},"indexFields":["$uid","$filePath"],"documents":["2d966dc411c413a357e52bb0843e96ac","5e493e45dfdf06bb17ff88ee95028f1d","54123c790f41a82f523f2742b7d37268","86e6908f05d91000d049203416e7103f"],"type":"Namespace","symbol":"/","uid":"793c199277a8254c22fd7539205c12ac","path":"articles","indices":{}},{"id":"readme","title":"page-fu\n","filePath":"README.md","summaryFields":["source"],"properties":{"source":"\n<h1 class=\"anchorable-heading\">\n  <a name=\"page-fu\" class=\"anchorable-heading__anchor\"></a>\n  <a href=\"#page-fu\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">page-fu</span>\n</h1><p>Your source of bananas for all-things routing with\n<a href=\"https://visionmedia.github.io/page.js/\" target=\"_blank\">page.js</a>.</p>\n<pre class=\"language-javascript\"><code>                                         ______\n                                      <span class=\"token punctuation\" >.</span><span class=\"token operator\" >-</span><span class=\"token string\" >\"\"</span><span class=\"token string\" >\"\"</span><span class=\"token punctuation\" >.</span><span class=\"token punctuation\" >.</span>_'<span class=\"token punctuation\" >.</span>       _<span class=\"token punctuation\" >,</span>##\n                               _<span class=\"token punctuation\" >.</span><span class=\"token punctuation\" >.</span>__ <span class=\"token operator\" >|</span><span class=\"token punctuation\" >.</span><span class=\"token operator\" >-</span><span class=\"token string\" >\"\"</span>\"<span class=\"token operator\" >-</span><span class=\"token punctuation\" >.</span><span class=\"token operator\" >|</span>  <span class=\"token operator\" >|</span>   _<span class=\"token punctuation\" >,</span>##'`<span class=\"token operator\" >-</span><span class=\"token punctuation\" >.</span>_\n                              <span class=\"token punctuation\" >(</span>_____<span class=\"token punctuation\" >)</span><span class=\"token operator\" >||</span>_____<span class=\"token operator\" >||</span>  <span class=\"token operator\" >|</span>_<span class=\"token punctuation\" >,</span>##<span class=\"token string\" >'`-._,##'</span>`\n                              _<span class=\"token operator\" >|</span>   <span class=\"token operator\" >|</span><span class=\"token punctuation\" >.</span><span class=\"token punctuation\" >;</span><span class=\"token operator\" >-</span><span class=\"token string\" >\"\"</span><span class=\"token operator\" >-</span><span class=\"token punctuation\" >.</span>  <span class=\"token operator\" >|</span>  <span class=\"token operator\" >|</span>#<span class=\"token string\" >'`-._,##'</span><span class=\"token template-string\" ><span class=\"token string\" >`\n                           _.;_ `</span></span><span class=\"token operator\" >--</span><span class=\"token string\" >' `\\    \\ |.'</span><span class=\"token template-string\" ><span class=\"token string\" >`\\._,##'`</span></span>\n                          <span class=\"token operator\" >/</span><span class=\"token punctuation\" >.</span><span class=\"token operator\" >-</span><span class=\"token punctuation\" >.</span>\\ <span class=\"token template-string\" ><span class=\"token string\" >`\\     |.-\";.`</span></span>_<span class=\"token punctuation\" >,</span> <span class=\"token operator\" >|</span>##'`\n                          <span class=\"token operator\" >|</span>\\__<span class=\"token regex\" >/   | _..;__  |'-' /</span>\n                          <span class=\"token string\" >'.____.'</span>_<span class=\"token punctuation\" >.</span><span class=\"token operator\" >-</span><span class=\"token template-string\" ><span class=\"token string\" >`)\\--' /'-'`</span></span>\n                           <span class=\"token comment\" spellcheck=\"true\">//||\\\\(_.-'_,'-'`</span>\n                         <span class=\"token punctuation\" >(</span><span class=\"token template-string\" ><span class=\"token string\" >`-...-')_,##'`</span></span>\n                  jgs _<span class=\"token punctuation\" >,</span>##<span class=\"token template-string\" ><span class=\"token string\" >`-..,-;##`</span></span>\n                   _<span class=\"token punctuation\" >,</span>##<span class=\"token string\" >'`-._,##'</span>`\n                _<span class=\"token punctuation\" >,</span>##<span class=\"token string\" >'`-._,##'</span><span class=\"token template-string\" ><span class=\"token string\" >`\n                  `</span></span><span class=\"token operator\" >-</span><span class=\"token punctuation\" >.</span>_<span class=\"token punctuation\" >,</span>##'`</code></pre><p>The <a href=\"js/page-fu.html\" title=\"The package exports.\" class=\"mega-link--internal\">package</a> exposes a <a href=\"js/Route.html\" title=\"Create a &quot;route handler&quot; equipped with all the capabilities provided by page-fu:\" class=\"mega-link--internal\">construct</a>, a few <a href=\"js/Router.html\" title=\"This module exposes APIs to perform routing side-effects via page.js.\" class=\"mega-link--internal\">helpers</a>, and a bunch of decorators to provide some structure around routing\nwith page.js.</p>\n<p>While page.js is elegant and powerful, building an application around it will\nusually lead to the creation of some constructs and abstractions. page-fu is a\ncollection of such abstractions that will support your routing logic.</p>\n\n<h2 class=\"anchorable-heading\">\n  <a name=\"installation\" class=\"anchorable-heading__anchor\"></a>\n  <a href=\"#installation\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Installation</span>\n</h2><p>Install the package from NPM:</p>\n<pre class=\"language-javascript\"><code>npm install <span class=\"token operator\" >--</span>save page<span class=\"token operator\" >-</span>fu</code></pre><p>Please note that the sources are distributed in ES6 format and require a module\nloader like <a href=\"https://webpack.js.org/\" target=\"_blank\">webpack</a> or\n<a href=\"http://browserify.org/\" target=\"_blank\">browserify</a> to work. There are currently no plans to\ndistribute compiled versions.</p>\n\n<h2 class=\"anchorable-heading\">\n  <a name=\"what-s-inside\" class=\"anchorable-heading__anchor\"></a>\n  <a href=\"#what-s-inside\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">What&#39;s inside</span>\n</h2><p>The gem of this package is the <a href=\"js/Route.html\" title=\"Create a &quot;route handler&quot; equipped with all the capabilities provided by page-fu:\" class=\"mega-link--internal\">route handling construct</a>. It\ndecorates your existing route handlers (what you pass to <a href=\"https://visionmedia.github.io/page.js /#pagepath-callback-\ncallback-\" target=\"_blank\"><code>page(String,\nFunction|Object)</code></a>) with extra functionality in a way that is not obtrusive.</p>\n<p>Moreover, the package focuses on the testability of route handlers so you will\nfind that everything it provides is (somewhat) easily testable. Minimal voodoo\ninvolved - promise!</p>\n<p>Get started by looking into the <a href=\"js/Route.html\" title=\"Create a &quot;route handler&quot; equipped with all the capabilities provided by page-fu:\" class=\"mega-link--internal\">Route</a> construct. You can also refer to the\nthe <a href=\"js/page-fu.html\" title=\"The package exports.\" class=\"mega-link--internal\">package</a> reference to see what symbols are exported for your\nuse and how to use them if you&#39;re unfamiliar with ES6 packages.</p>\n\n<h2 class=\"anchorable-heading\">\n  <a name=\"testing\" class=\"anchorable-heading__anchor\"></a>\n  <a href=\"#testing\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Testing</span>\n</h2><p>Refer to the <a href=\"testing.html\" title=\"Testing routes at the unit-level should be possible and page-fu defines the handlers in a way that makes them testable even without page.js actually running (assuming, of course, that you will be stubbing calls to the routing APIs.)\" class=\"mega-link--internal\">testing guide</a> to learn how to test every\ninch of your route handlers.</p>\n","title":"page-fu","wordCount":275,"plainTitle":"page-fu\n","fileName":"README","folder":".","id":"readme","sortingId":"README.md"},"symbol":"#","meta":{"anchor":"page-fu","hrefRewritten":true,"href":"/index.html","htmlFilePath":"index.html"},"entities":["496890bd522447d8779f673d7ea3e0bf","e68023ceca9fb0df3735e71ac545ad67","e845bbd15671a0a986176476b3cf3b5a","19c3ebca7f2d97399a54862d2642e405"],"documents":[],"type":"Document","uid":"2d966dc411c413a357e52bb0843e96ac","summary":"Your source of bananas for all-things routing with page.js.","parentNodeUID":"793c199277a8254c22fd7539205c12ac","path":"articles/readme","indices":{"readme":1,"/README.md":1,"README.md":1}},{"id":"page-fu","title":"page-fu","properties":{"id":"page-fu","scopedId":"page-fu","level":1,"html":"page-fu","text":"page-fu"},"indexFields":[],"filePath":"README.md","meta":{"indexDisplayName":" page-fu","anchor":"page-fu","href":"/index.html#page-fu","htmlFilePath":null},"type":"DocumentEntity","uid":"496890bd522447d8779f673d7ea3e0bf","parentNodeUID":"2d966dc411c413a357e52bb0843e96ac","path":"articles/readme#page-fu","indices":{}},{"id":"installation","title":"Installation","properties":{"id":"installation","scopedId":"installation","level":2,"html":"Installation","text":"Installation"},"filePath":"README.md","meta":{"indexDisplayName":"   Installation","anchor":"installation","href":"/index.html#installation","htmlFilePath":null},"type":"DocumentEntity","uid":"e68023ceca9fb0df3735e71ac545ad67","parentNodeUID":"2d966dc411c413a357e52bb0843e96ac","path":"articles/readme#installation","indices":{"installation":0,"readme#installation":1,"/README.md#installation":1,"README.md#installation":1}},{"id":"what-s-inside","title":"What's inside","properties":{"id":"what-s-inside","scopedId":"what-s-inside","level":2,"html":"What&#39;s inside","text":"What's inside"},"filePath":"README.md","meta":{"indexDisplayName":"   What's inside","anchor":"what-s-inside","href":"/index.html#what-s-inside","htmlFilePath":null},"type":"DocumentEntity","uid":"e845bbd15671a0a986176476b3cf3b5a","parentNodeUID":"2d966dc411c413a357e52bb0843e96ac","path":"articles/readme#what-s-inside","indices":{"what-s-inside":0,"readme#what-s-inside":1,"/README.md#what-s-inside":1,"README.md#what-s-inside":1}},{"id":"testing","title":"Testing","properties":{"id":"testing","scopedId":"testing","level":2,"html":"Testing","text":"Testing"},"filePath":"README.md","meta":{"indexDisplayName":"   Testing","anchor":"testing","href":"/index.html#testing","htmlFilePath":null},"type":"DocumentEntity","uid":"19c3ebca7f2d97399a54862d2642e405","parentNodeUID":"2d966dc411c413a357e52bb0843e96ac","path":"articles/readme#testing","indices":{"testing":0,"readme#testing":1,"/README.md#testing":1,"README.md#testing":1}},{"id":"examples","title":"Examples\n","filePath":"doc/examples.md","summaryFields":["source"],"properties":{"source":"\n<h1 class=\"anchorable-heading\">\n  <a name=\"examples\" class=\"anchorable-heading__anchor\"></a>\n  <a href=\"#examples\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Examples</span>\n</h1>\n<h2 class=\"anchorable-heading\">\n  <a name=\"utilizing-state-props\" class=\"anchorable-heading__anchor\"></a>\n  <a href=\"#utilizing-state-props\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Utilizing state &amp; props</span>\n</h2><p>This is a more complete example that shows three of the decorators at work\ntogether: <a href=\"js/withState.html\" title=\"Decorate your route with the ability to transition between (internal) states. That state will be purged upon entering and exiting the route so you do not need to manage it.\" class=\"mega-link--internal\">state</a>, <a href=\"js/withProps.html\" title=\"Inject named parameters and query parameters as &quot;[[props | withProps@props]]&quot; into your route.\" class=\"mega-link--internal\">props</a>, and the <a href=\"js/withAtomicity.html\" title=\"Ensure that your route&#39;s exit hook is invoked only when its enter hook was also invoked during the active dispatch. Hence, &quot;atomic&quot;.\" class=\"mega-link--internal\">atomicity guard</a>.</p>\n<pre class=\"language-javascript\"><code><span class=\"token keyword\" >import</span> page <span class=\"token keyword\" >from</span> <span class=\"token string\" >'page'</span>\n<span class=\"token keyword\" >import</span> <span class=\"token punctuation\" >{</span> Route <span class=\"token punctuation\" >}</span> <span class=\"token keyword\" >from</span> <span class=\"token string\" >'page-fu'</span>\n<span class=\"token keyword\" >import</span> React <span class=\"token keyword\" >from</span> <span class=\"token string\" >'react'</span>\n<span class=\"token keyword\" >import</span> ReactDOM <span class=\"token keyword\" >from</span> <span class=\"token string\" >'react-dom'</span>\n<span class=\"token keyword\" >import</span> <span class=\"token punctuation\" >{</span> LoadingView<span class=\"token punctuation\" >,</span> PatientView <span class=\"token punctuation\" >}</span> <span class=\"token keyword\" >from</span> <span class=\"token string\" >'./components'</span>\n\n<span class=\"token keyword\" >const</span> asJSON <span class=\"token operator\" >=</span> response <span class=\"token operator\" >=</span><span class=\"token operator\" >></span> response<span class=\"token punctuation\" >.</span><span class=\"token function\" >json</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n<span class=\"token keyword\" >const</span> PatientRoute <span class=\"token operator\" >=</span> <span class=\"token function\" >Route</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span>\n  <span class=\"token function\" >getInitialState</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    <span class=\"token keyword\" >return</span> <span class=\"token punctuation\" >{</span>\n      domNode<span class=\"token punctuation\" >:</span> document<span class=\"token punctuation\" >.</span>body<span class=\"token punctuation\" >.</span><span class=\"token function\" >appendChild</span><span class=\"token punctuation\" >(</span>document<span class=\"token punctuation\" >.</span><span class=\"token function\" >createElement</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'div'</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >,</span>\n      patient<span class=\"token punctuation\" >:</span> <span class=\"token keyword\" >null</span><span class=\"token punctuation\" >,</span>\n    <span class=\"token punctuation\" >}</span>\n  <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span>\n\n  <span class=\"token function\" >enter</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    <span class=\"token keyword\" >const</span> <span class=\"token punctuation\" >{</span> patientId <span class=\"token punctuation\" >}</span> <span class=\"token operator\" >=</span> <span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span>props<span class=\"token punctuation\" >.</span>params\n\n    <span class=\"token function\" >fetch</span><span class=\"token punctuation\" >(</span><span class=\"token template-string\" ><span class=\"token string\" >`/api/patients/</span><span class=\"token interpolation\" ><span class=\"token interpolation-punctuation punctuation\" >${</span>patientId<span class=\"token interpolation-punctuation punctuation\" >}</span></span><span class=\"token string\" >`</span></span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >.</span><span class=\"token function\" >then</span><span class=\"token punctuation\" >(</span>asJSON<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >.</span><span class=\"token function\" >then</span><span class=\"token punctuation\" >(</span>payload <span class=\"token operator\" >=</span><span class=\"token operator\" >></span> <span class=\"token punctuation\" >{</span>\n      <span class=\"token keyword\" >if</span> <span class=\"token punctuation\" >(</span><span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span><span class=\"token function\" >isActive</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n        <span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span><span class=\"token function\" >setState</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span> patient<span class=\"token punctuation\" >:</span> payload<span class=\"token punctuation\" >.</span>patients<span class=\"token punctuation\" >[</span><span class=\"token number\" >0</span><span class=\"token punctuation\" >]</span> <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span>\n      <span class=\"token punctuation\" >}</span>\n    <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span>\n\n    <span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span><span class=\"token function\" >render</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span>\n  <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span>\n\n  <span class=\"token function\" >stateDidChange</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    <span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span><span class=\"token function\" >render</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span>\n  <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span>\n\n  <span class=\"token function\" >exit</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    <span class=\"token comment\" spellcheck=\"true\">// clean up our DOM artifacts</span>\n    ReactDOM<span class=\"token punctuation\" >.</span><span class=\"token function\" >unmountComponentAtNode</span><span class=\"token punctuation\" >(</span><span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span>state<span class=\"token punctuation\" >.</span>domNode<span class=\"token punctuation\" >)</span>\n    <span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span>state<span class=\"token punctuation\" >.</span>domNode<span class=\"token punctuation\" >.</span><span class=\"token function\" >remove</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span>\n  <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span>\n\n  <span class=\"token function\" >render</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    <span class=\"token keyword\" >const</span> <span class=\"token punctuation\" >{</span> domNode<span class=\"token punctuation\" >,</span> patient <span class=\"token punctuation\" >}</span> <span class=\"token operator\" >=</span> <span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span>state\n\n    <span class=\"token keyword\" >if</span> <span class=\"token punctuation\" >(</span><span class=\"token operator\" >!</span>patient<span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n      ReactDOM<span class=\"token punctuation\" >.</span><span class=\"token function\" >render</span><span class=\"token punctuation\" >(</span><span class=\"token operator\" >&lt;</span>LoadingView <span class=\"token operator\" >/</span><span class=\"token operator\" >></span><span class=\"token punctuation\" >,</span> domNode<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span> \n    <span class=\"token punctuation\" >}</span>\n    <span class=\"token keyword\" >else</span> <span class=\"token punctuation\" >{</span>\n      ReactDOM<span class=\"token punctuation\" >.</span><span class=\"token function\" >render</span><span class=\"token punctuation\" >(</span><span class=\"token operator\" >&lt;</span>PatientView patient<span class=\"token operator\" >=</span><span class=\"token punctuation\" >{</span>patient<span class=\"token punctuation\" >}</span> <span class=\"token operator\" >/</span><span class=\"token operator\" >></span><span class=\"token punctuation\" >,</span> domNode<span class=\"token punctuation\" >)</span>\n    <span class=\"token punctuation\" >}</span>\n  <span class=\"token punctuation\" >}</span>\n<span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// register our route handler</span>\n<span class=\"token function\" >page</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'/patients/:id'</span><span class=\"token punctuation\" >,</span> PatientRoute<span class=\"token punctuation\" >.</span>enter<span class=\"token punctuation\" >)</span>\npage<span class=\"token punctuation\" >.</span><span class=\"token function\" >exit</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'/patients/:id'</span><span class=\"token punctuation\" >,</span> PatientRoute<span class=\"token punctuation\" >.</span>exit<span class=\"token punctuation\" >)</span></code></pre>\n<h2 class=\"anchorable-heading\">\n  <a name=\"building-a-custom-route\" class=\"anchorable-heading__anchor\"></a>\n  <a href=\"#building-a-custom-route\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Building a custom <a href=\"js/Route.html\" title=\"Create a &quot;route handler&quot; equipped with all the capabilities provided by page-fu:\" class=\"mega-link--internal\">Route</a></span>\n</h2><p>Let&#39;s assume that for some reason we want to opt out of using one or some of\nthe default decorators provided by <a href=\"js/Route.html\" title=\"Create a &quot;route handler&quot; equipped with all the capabilities provided by page-fu:\" class=\"mega-link--internal\">Route</a>, or maybe we want to extend it\nwith a new one. We&#39;re in luck because as <code>Route</code> is just a composition of\nfunctions, we have the flexibility to do so.</p>\n<p>In this example we&#39;ll add a new decorator that injects our route with a DOM\nnode (the implementation of which will be left for another example), and pipe\nit along the <a href=\"js/withState.html\" title=\"Decorate your route with the ability to transition between (internal) states. That state will be purged upon entering and exiting the route so you do not need to manage it.\" class=\"mega-link--internal\">withState</a> and <a href=\"js/withProps.html\" title=\"Inject named parameters and query parameters as &quot;[[props | withProps@props]]&quot; into your route.\" class=\"mega-link--internal\">withProps</a> decorators provided by page-fu:</p>\n<pre class=\"language-javascript\"><code><span class=\"token keyword\" >import</span> <span class=\"token punctuation\" >{</span> withState<span class=\"token punctuation\" >,</span> withProps <span class=\"token punctuation\" >}</span> <span class=\"token keyword\" >from</span> <span class=\"token string\" >'page-fu'</span>\n<span class=\"token keyword\" >import</span> <span class=\"token punctuation\" >{</span> flow <span class=\"token punctuation\" >}</span> <span class=\"token keyword\" >from</span> <span class=\"token string\" >'lodash'</span>\n<span class=\"token keyword\" >import</span> withDOMNode <span class=\"token keyword\" >from</span> <span class=\"token string\" >'./withDOMNode'</span>\n\n<span class=\"token keyword\" >const</span> WithStateAndProps <span class=\"token operator\" >=</span> <span class=\"token function\" >flow</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >[</span> withState<span class=\"token punctuation\" >,</span> withProps<span class=\"token punctuation\" >,</span> withDOMNode <span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// now you're free to use it just like { Route } from 'page-fu' !</span>\n<span class=\"token keyword\" >const</span> MyRoute <span class=\"token operator\" >=</span> <span class=\"token function\" >WithStateAndProps</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span>\n  <span class=\"token function\" >enter</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    console<span class=\"token punctuation\" >.</span><span class=\"token function\" >assert</span><span class=\"token punctuation\" >(</span><span class=\"token keyword\" >typeof</span> <span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span>props <span class=\"token operator\" >===</span> <span class=\"token string\" >'object'</span><span class=\"token punctuation\" >)</span>\n    console<span class=\"token punctuation\" >.</span><span class=\"token function\" >assert</span><span class=\"token punctuation\" >(</span><span class=\"token keyword\" >typeof</span> <span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span>state <span class=\"token operator\" >===</span> <span class=\"token string\" >'object'</span><span class=\"token punctuation\" >)</span>\n    console<span class=\"token punctuation\" >.</span><span class=\"token function\" >assert</span><span class=\"token punctuation\" >(</span><span class=\"token keyword\" >typeof</span> <span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span>domNode <span class=\"token operator\" >===</span> <span class=\"token string\" >'object'</span><span class=\"token punctuation\" >)</span>\n  <span class=\"token punctuation\" >}</span>\n<span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span></code></pre>\n<h2 class=\"anchorable-heading\">\n  <a name=\"creating-a-custom-decorator\" class=\"anchorable-heading__anchor\"></a>\n  <a href=\"#creating-a-custom-decorator\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Creating a custom decorator</span>\n</h2><p>Building on the previous example, let&#39;s now look into the implementation\nof such a <code>withDOMNode</code> decorator.</p>\n<p>In all respects, it&#39;s just like a regular <code>page.js</code> middleware but with two\ncaveats we need to watch out for:</p>\n<ul>\n<li>the original <code>enter</code> and <code>exit</code> hooks must be called with the right context, <code>this</code>, and forwarded the same arguments they expect (<code>ctx, next</code>)</li>\n<li>we must ensure that the next <code>exit</code> in the chain is aware of its <code>next</code>\ncallback, if it&#39;s not, we <a href=\"js/ensureNextIsCalled.html\" title=\"Ensure that the given function will always &quot;yield&quot; by calling next on its behalf if needed.\" class=\"mega-link--internal\">call it on its behalf</a></li>\n</ul>\n<pre class=\"language-javascript\"><code><span class=\"token keyword\" >import</span> <span class=\"token punctuation\" >{</span> withState<span class=\"token punctuation\" >,</span> withProps<span class=\"token punctuation\" >,</span> ensureNextIsCalled <span class=\"token punctuation\" >}</span> <span class=\"token keyword\" >from</span> <span class=\"token string\" >'page-fu'</span>\n<span class=\"token keyword\" >import</span> <span class=\"token punctuation\" >{</span> flow <span class=\"token punctuation\" >}</span> <span class=\"token keyword\" >from</span> <span class=\"token string\" >'lodash'</span>\n\n<span class=\"token keyword\" >const</span> withDOMNode <span class=\"token operator\" >=</span> instance <span class=\"token operator\" >=</span><span class=\"token operator\" >></span> <span class=\"token punctuation\" >{</span>\n  <span class=\"token comment\" spellcheck=\"true\">// grab a reference to the original enter &amp; exit hooks so that we can</span>\n  <span class=\"token comment\" spellcheck=\"true\">// yield to them in our overrides:</span>\n  <span class=\"token comment\" spellcheck=\"true\">// </span>\n  <span class=\"token comment\" spellcheck=\"true\">// Note that they may not always exist so don't assume anything!</span>\n  <span class=\"token keyword\" >const</span> enter <span class=\"token operator\" >=</span> instance<span class=\"token punctuation\" >.</span>enter <span class=\"token operator\" >||</span> Function<span class=\"token punctuation\" >.</span>prototype<span class=\"token punctuation\" >;</span>\n\n  <span class=\"token comment\" spellcheck=\"true\">// read more about this in the ensureNextIsCalled documentation page</span>\n  <span class=\"token keyword\" >const</span> exit <span class=\"token operator\" >=</span> <span class=\"token function\" >ensureNextIsCalled</span><span class=\"token punctuation\" >(</span>instance<span class=\"token punctuation\" >.</span>exit<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n\n  <span class=\"token comment\" spellcheck=\"true\">// we can utilize the closure to guard our private state from the other</span>\n  <span class=\"token comment\" spellcheck=\"true\">// decorators and the handler itself too:</span>\n  <span class=\"token keyword\" >let</span> domNode<span class=\"token punctuation\" >;</span>\n\n  <span class=\"token keyword\" >return</span> Object<span class=\"token punctuation\" >.</span><span class=\"token function\" >assign</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span><span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span> instance<span class=\"token punctuation\" >,</span> <span class=\"token punctuation\" >{</span>\n    <span class=\"token function\" >enter</span><span class=\"token punctuation\" >(</span>ctx<span class=\"token punctuation\" >,</span> next<span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n      <span class=\"token comment\" spellcheck=\"true\">// set up our state for this dispatch:</span>\n      domNode <span class=\"token operator\" >=</span> document<span class=\"token punctuation\" >.</span><span class=\"token function\" >createElement</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'div'</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n\n      <span class=\"token comment\" spellcheck=\"true\">// now yield to the next in chain:</span>\n      enter<span class=\"token punctuation\" >.</span><span class=\"token function\" >call</span><span class=\"token punctuation\" >(</span><span class=\"token keyword\" >this</span><span class=\"token punctuation\" >,</span> ctx<span class=\"token punctuation\" >,</span> next<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n    <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// any public APIs can go here:</span>\n    <span class=\"token function\" >getDOMNode</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n      <span class=\"token keyword\" >return</span> domNode<span class=\"token punctuation\" >;</span>\n    <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span>\n\n    <span class=\"token function\" >exit</span><span class=\"token punctuation\" >(</span>ctx<span class=\"token punctuation\" >,</span> next<span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n      <span class=\"token comment\" spellcheck=\"true\">// wait for the rest of chain to clean up *before* we clean</span>\n      <span class=\"token comment\" spellcheck=\"true\">// up after ourselves:</span>\n      exit<span class=\"token punctuation\" >.</span><span class=\"token function\" >call</span><span class=\"token punctuation\" >(</span><span class=\"token keyword\" >this</span><span class=\"token punctuation\" >,</span> ctx<span class=\"token punctuation\" >,</span> err <span class=\"token operator\" >=</span><span class=\"token operator\" >></span> <span class=\"token punctuation\" >{</span>\n        <span class=\"token comment\" spellcheck=\"true\">// now we clean up:</span>\n        domNode<span class=\"token punctuation\" >.</span><span class=\"token function\" >remove</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n        domNode <span class=\"token operator\" >=</span> <span class=\"token keyword\" >null</span><span class=\"token punctuation\" >;</span>\n\n        <span class=\"token comment\" spellcheck=\"true\">// and finally, let the next handler take over:</span>\n        <span class=\"token function\" >next</span><span class=\"token punctuation\" >(</span>err<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n      <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n    <span class=\"token punctuation\" >}</span>\n  <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span>\n<span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >;</span></code></pre>","title":"Examples","wordCount":591,"plainTitle":"Examples\n","fileName":"examples","folder":"doc","id":"examples","sortingId":"doc/examples.md"},"symbol":"#","meta":{"anchor":"examples","href":"/examples.html","htmlFilePath":"examples.html"},"entities":["d83ee7e230cb0b593ac128bac4c7235c","abfd03cefc99c2f4511a1aea3faca7ea","80c0aa30f1ec0ce8cf9fcc3b1ae491d8","a4d2ce1becc56aa3c414a6aa2658095a"],"documents":[],"type":"Document","uid":"5e493e45dfdf06bb17ff88ee95028f1d","summary":"This is a more complete example that shows three of the decorators at work together: [[state | withState]], [[props | withProps]], and the [[atomicity guard | withAtomicity]].","parentNodeUID":"793c199277a8254c22fd7539205c12ac","path":"articles/examples","indices":{"examples":1,"/doc/examples.md":1,"doc/examples.md":1}},{"id":"examples","title":"Examples","properties":{"id":"examples","scopedId":"examples","level":1,"html":"Examples","text":"Examples"},"indexFields":[],"filePath":"doc/examples.md","meta":{"indexDisplayName":" Examples","anchor":"examples","href":"/examples.html#examples","htmlFilePath":null},"type":"DocumentEntity","uid":"d83ee7e230cb0b593ac128bac4c7235c","parentNodeUID":"5e493e45dfdf06bb17ff88ee95028f1d","path":"articles/examples#examples","indices":{}},{"id":"utilizing-state-props","title":"Utilizing state & props","properties":{"id":"utilizing-state-props","scopedId":"utilizing-state-props","level":2,"html":"Utilizing state &amp; props","text":"Utilizing state & props"},"filePath":"doc/examples.md","meta":{"indexDisplayName":"   Utilizing state & props","anchor":"utilizing-state-props","href":"/examples.html#utilizing-state-props","htmlFilePath":null},"type":"DocumentEntity","uid":"abfd03cefc99c2f4511a1aea3faca7ea","parentNodeUID":"5e493e45dfdf06bb17ff88ee95028f1d","path":"articles/examples#utilizing-state-props","indices":{"utilizing-state-props":0,"examples#utilizing-state-props":1,"/doc/examples.md#utilizing-state-props":1,"doc/examples.md#utilizing-state-props":1}},{"id":"building-a-custom-route","title":"Building a custom [[Route]]","properties":{"id":"building-a-custom-route","scopedId":"building-a-custom-route","level":2,"html":"Building a custom [[Route]]","text":"Building a custom [[Route]]"},"filePath":"doc/examples.md","meta":{"indexDisplayName":"   Building a custom [[Route]]","anchor":"building-a-custom-route","href":"/examples.html#building-a-custom-route","htmlFilePath":null},"type":"DocumentEntity","uid":"80c0aa30f1ec0ce8cf9fcc3b1ae491d8","parentNodeUID":"5e493e45dfdf06bb17ff88ee95028f1d","path":"articles/examples#building-a-custom-route","indices":{"building-a-custom-route":0,"examples#building-a-custom-route":1,"/doc/examples.md#building-a-custom-route":1,"doc/examples.md#building-a-custom-route":1}},{"id":"creating-a-custom-decorator","title":"Creating a custom decorator","properties":{"id":"creating-a-custom-decorator","scopedId":"creating-a-custom-decorator","level":2,"html":"Creating a custom decorator","text":"Creating a custom decorator"},"filePath":"doc/examples.md","meta":{"indexDisplayName":"   Creating a custom decorator","anchor":"creating-a-custom-decorator","href":"/examples.html#creating-a-custom-decorator","htmlFilePath":null},"type":"DocumentEntity","uid":"a4d2ce1becc56aa3c414a6aa2658095a","parentNodeUID":"5e493e45dfdf06bb17ff88ee95028f1d","path":"articles/examples#creating-a-custom-decorator","indices":{"creating-a-custom-decorator":0,"examples#creating-a-custom-decorator":1,"/doc/examples.md#creating-a-custom-decorator":1,"doc/examples.md#creating-a-custom-decorator":1}},{"id":"testing","title":"Testing\n","filePath":"doc/testing.md","summaryFields":["source"],"properties":{"source":"\n<h1 class=\"anchorable-heading\">\n  <a name=\"testing\" class=\"anchorable-heading__anchor\"></a>\n  <a href=\"#testing\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Testing</span>\n</h1><p>Testing routes at the unit-level should be possible and page-fu defines the\nhandlers in a way that makes them testable even <em>without</em> page.js actually\nrunning (assuming, of course, that you will be stubbing calls to the routing\nAPIs.)</p>\n<p>There is very little &quot;cruft&quot; needed to define your tests. Namely, you will only\nneed to provide a <a href=\"https://visionmedia.github.io/page.js/#context\" target=\"_blank\">routing\ncontext</a> for the route and call\n<code>enter</code> or <code>exit</code> as needed.</p>\n<p>Let us go through a few examples to see how we can test various aspects of our\nroute handlers.</p>\n\n<h2 class=\"anchorable-heading\">\n  <a name=\"testing-the-enter-and-exit-hooks\" class=\"anchorable-heading__anchor\"></a>\n  <a href=\"#testing-the-enter-and-exit-hooks\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Testing the <code>enter</code> and <code>exit</code> hooks</span>\n</h2><p>In this example, the route will be fetching a user upon entering and we&#39;ll\nverify that it&#39;s making the correct call as well as using the data once it\narrives.</p>\n<p>For this test, we&#39;ll assume <a href=\"http://sinonjs.org/\" target=\"_blank\">sinon</a> to be available to\nmock the requests, and an API called <code>fetch</code> that performs an XHR and yields\nJSON.</p>\n<pre class=\"language-javascript\"><code><span class=\"token comment\" spellcheck=\"true\">// UserRoute.js</span>\n<span class=\"token keyword\" >import</span> <span class=\"token punctuation\" >{</span> Route <span class=\"token punctuation\" >}</span> <span class=\"token keyword\" >from</span> <span class=\"token string\" >'page-fu'</span><span class=\"token punctuation\" >;</span>\n\n<span class=\"token keyword\" >export</span> <span class=\"token keyword\" >default</span> <span class=\"token function\" >Route</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span>\n  <span class=\"token function\" >getInitialState</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    <span class=\"token keyword\" >return</span> <span class=\"token punctuation\" >{</span> user<span class=\"token punctuation\" >:</span> <span class=\"token keyword\" >null</span> <span class=\"token punctuation\" >}</span>\n  <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span>\n\n  <span class=\"token function\" >enter</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    <span class=\"token keyword\" >const</span> <span class=\"token punctuation\" >{</span> userId <span class=\"token punctuation\" >}</span> <span class=\"token operator\" >=</span> <span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span>props<span class=\"token punctuation\" >.</span>params<span class=\"token punctuation\" >;</span>\n\n    <span class=\"token function\" >fetch</span><span class=\"token punctuation\" >(</span><span class=\"token template-string\" ><span class=\"token string\" >`/api/users/</span><span class=\"token interpolation\" ><span class=\"token interpolation-punctuation punctuation\" >${</span>userId<span class=\"token interpolation-punctuation punctuation\" >}</span></span><span class=\"token string\" >`</span></span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >.</span><span class=\"token function\" >then</span><span class=\"token punctuation\" >(</span>user <span class=\"token operator\" >=</span><span class=\"token operator\" >></span> <span class=\"token punctuation\" >{</span>\n      <span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span><span class=\"token function\" >setState</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span> user <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span>\n      <span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span><span class=\"token function\" >render</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span>\n    <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n\n    <span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span><span class=\"token function\" >render</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span>\n  <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span>\n\n  <span class=\"token function\" >render</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    <span class=\"token keyword\" >if</span> <span class=\"token punctuation\" >(</span><span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span>state<span class=\"token punctuation\" >.</span>user<span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n      console<span class=\"token punctuation\" >.</span><span class=\"token function\" >log</span><span class=\"token punctuation\" >(</span><span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span>state<span class=\"token punctuation\" >.</span>user<span class=\"token punctuation\" >.</span>name<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>     \n    <span class=\"token punctuation\" >}</span>\n  <span class=\"token punctuation\" >}</span>\n<span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span></code></pre><p>Now for our test, we only need to call <code>enter</code> with some <a href=\"https://visionmedia.github.io/page.js/#context\" target=\"_blank\">page.js\ncontext</a> which will get\nprocessed by our route&#39;s decorators.</p>\n<pre class=\"language-javascript\"><code><span class=\"token comment\" spellcheck=\"true\">// UserRoute.test.js</span>\n<span class=\"token keyword\" >import</span> subject <span class=\"token keyword\" >from</span> <span class=\"token string\" >'./UserRoute'</span><span class=\"token punctuation\" >;</span>\n<span class=\"token keyword\" >import</span> sinon <span class=\"token keyword\" >from</span> <span class=\"token string\" >'...'</span><span class=\"token punctuation\" >;</span>\n<span class=\"token keyword\" >import</span> assert <span class=\"token keyword\" >from</span> <span class=\"token string\" >'...'</span><span class=\"token punctuation\" >;</span>\n\n<span class=\"token function\" >describe</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'UserRoute.enter'</span><span class=\"token punctuation\" >,</span> <span class=\"token keyword\" >function</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n  <span class=\"token function\" >afterEach</span><span class=\"token punctuation\" >(</span><span class=\"token keyword\" >function</span><span class=\"token punctuation\" >(</span>done<span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    subject<span class=\"token punctuation\" >.</span><span class=\"token function\" >exit</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span><span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span> done<span class=\"token punctuation\" >)</span>\n  <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n\n  <span class=\"token function\" >it</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'fetches the user pointed to by params'</span><span class=\"token punctuation\" >,</span> <span class=\"token keyword\" >function</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    subject<span class=\"token punctuation\" >.</span><span class=\"token function\" >enter</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span>\n      params<span class=\"token punctuation\" >:</span> <span class=\"token punctuation\" >{</span>\n        userId<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'user1'</span>\n      <span class=\"token punctuation\" >}</span>\n    <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n\n    assert<span class=\"token punctuation\" >.</span><span class=\"token function\" >equal</span><span class=\"token punctuation\" >(</span>sinon<span class=\"token punctuation\" >.</span>server<span class=\"token punctuation\" >.</span>requests<span class=\"token punctuation\" >.</span>length<span class=\"token punctuation\" >,</span> <span class=\"token number\" >1</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n    assert<span class=\"token punctuation\" >.</span><span class=\"token function\" >equal</span><span class=\"token punctuation\" >(</span>sinon<span class=\"token punctuation\" >.</span>server<span class=\"token punctuation\" >.</span>requests<span class=\"token punctuation\" >[</span><span class=\"token number\" >0</span><span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >.</span>url<span class=\"token punctuation\" >,</span> <span class=\"token string\" >'/api/users/user1'</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n  <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n\n  <span class=\"token function\" >it</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'renders the user'</span><span class=\"token punctuation\" >,</span> <span class=\"token keyword\" >function</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    sinon<span class=\"token punctuation\" >.</span><span class=\"token function\" >stub</span><span class=\"token punctuation\" >(</span>console<span class=\"token punctuation\" >,</span> <span class=\"token string\" >'log'</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n\n    subject<span class=\"token punctuation\" >.</span><span class=\"token function\" >enter</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span>\n      params<span class=\"token punctuation\" >:</span> <span class=\"token punctuation\" >{</span>\n        userId<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'user1'</span>\n      <span class=\"token punctuation\" >}</span>\n    <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n\n    sinon<span class=\"token punctuation\" >.</span>server<span class=\"token punctuation\" >.</span>requests<span class=\"token punctuation\" >[</span><span class=\"token number\" >0</span><span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >.</span><span class=\"token function\" >respond</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >[</span>\n      <span class=\"token number\" >200</span><span class=\"token punctuation\" >,</span>\n      <span class=\"token punctuation\" >{</span> <span class=\"token string\" >'Content-Type'</span><span class=\"token punctuation\" >:</span> <span class=\"token string\" >'application/json'</span> <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span>\n      JSON<span class=\"token punctuation\" >.</span><span class=\"token function\" >stringify</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span> name<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'The Banana King'</span> <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span>\n    <span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >)</span>\n\n    assert<span class=\"token punctuation\" >.</span><span class=\"token function\" >calledWith</span><span class=\"token punctuation\" >(</span>console<span class=\"token punctuation\" >.</span>log<span class=\"token punctuation\" >,</span> <span class=\"token string\" >'The Banana King'</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n  <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n<span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span></code></pre><p>Testing the <code>exit</code> hook is similar but you should probably call <code>enter</code> first\nto simulate the real state the route will normally be in when <code>exit</code> is called.</p>\n\n<h2 class=\"anchorable-heading\">\n  <a name=\"testing-public-apis\" class=\"anchorable-heading__anchor\"></a>\n  <a href=\"#testing-public-apis\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Testing public APIs</span>\n</h2><p>This is also straight-forward except that you should call <code>enter</code> to prepare\nyour route (that is, to apply the various decorators&#39; entry hooks.)</p>\n<p>Consider the following route which defines a <code>parseFile</code> API that gets called\nby the UI somewhere:</p>\n<pre class=\"language-javascript\"><code><span class=\"token comment\" spellcheck=\"true\">// file: MyRoute.js</span>\n<span class=\"token keyword\" >import</span> <span class=\"token punctuation\" >{</span> Route <span class=\"token punctuation\" >}</span> <span class=\"token keyword\" >from</span> <span class=\"token string\" >'page-fu'</span><span class=\"token punctuation\" >;</span>\n\n<span class=\"token keyword\" >export</span> <span class=\"token keyword\" >default</span> <span class=\"token function\" >Route</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span>\n  <span class=\"token function\" >parseFile</span><span class=\"token punctuation\" >(</span>file<span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    <span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span><span class=\"token function\" >setState</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span> parsing<span class=\"token punctuation\" >:</span> <span class=\"token boolean\" >true</span> <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// do something with file...</span>\n    <span class=\"token function\" >doSomethingWithFile</span><span class=\"token punctuation\" >(</span>file<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >.</span><span class=\"token function\" >then</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token operator\" >=</span><span class=\"token operator\" >></span> <span class=\"token punctuation\" >{</span>\n      <span class=\"token keyword\" >if</span> <span class=\"token punctuation\" >(</span><span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span><span class=\"token function\" >isActive</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n        <span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span><span class=\"token function\" >setState</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span> parsing<span class=\"token punctuation\" >:</span> <span class=\"token boolean\" >false</span> <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n      <span class=\"token punctuation\" >}</span>\n    <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span>\n  <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span>\n\n  <span class=\"token function\" >isParsingFile</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    <span class=\"token keyword\" >return</span> <span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span>state<span class=\"token punctuation\" >.</span>parsing<span class=\"token punctuation\" >;</span>\n  <span class=\"token punctuation\" >}</span>\n<span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span></code></pre><pre class=\"language-javascript\"><code><span class=\"token comment\" spellcheck=\"true\">// file: MyRoute.test.js</span>\n<span class=\"token keyword\" >import</span> subject <span class=\"token keyword\" >from</span> <span class=\"token string\" >'./MyRoute'</span><span class=\"token punctuation\" >;</span>\n<span class=\"token keyword\" >import</span> <span class=\"token punctuation\" >{</span> assert <span class=\"token punctuation\" >}</span> <span class=\"token keyword\" >from</span> <span class=\"token string\" >'chai'</span><span class=\"token punctuation\" >;</span>\n\n<span class=\"token function\" >describe</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'MyRoute.parseFile'</span><span class=\"token punctuation\" >,</span> <span class=\"token keyword\" >function</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n  <span class=\"token function\" >afterEach</span><span class=\"token punctuation\" >(</span><span class=\"token keyword\" >function</span><span class=\"token punctuation\" >(</span>done<span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    subject<span class=\"token punctuation\" >.</span><span class=\"token function\" >exit</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span><span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span> done<span class=\"token punctuation\" >)</span>\n  <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n\n  <span class=\"token function\" >it</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'works'</span><span class=\"token punctuation\" >,</span> <span class=\"token keyword\" >function</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    <span class=\"token comment\" spellcheck=\"true\">// must initialize the route by invoking the decorators' entry hooks</span>\n    subject<span class=\"token punctuation\" >.</span><span class=\"token function\" >enter</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span><span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// now the route is ready to be interacted with</span>\n    subject<span class=\"token punctuation\" >.</span><span class=\"token function\" >parseFile</span><span class=\"token punctuation\" >(</span>someFile<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n\n    assert<span class=\"token punctuation\" >.</span><span class=\"token function\" >ok</span><span class=\"token punctuation\" >(</span>subject<span class=\"token punctuation\" >.</span><span class=\"token function\" >isParsingFile</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >)</span>\n  <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span>\n<span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span></code></pre>\n<h2 class=\"anchorable-heading\">\n  <a name=\"testing-transitions\" class=\"anchorable-heading__anchor\"></a>\n  <a href=\"#testing-transitions\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Testing transitions</span>\n</h2><p>There&#39;s nothing special here since the routes will be invoking <a href=\"js/withRoutingAPIs.html\" title=\"A cute and simple decorator that allows direct access to the [[router | Router]]&#39;s primary routines.\" class=\"mega-link--internal\">instance\nmethods</a> to perform routing side-effects so you would\ntest them like any other API.</p>\n<p>For example, to verify that the following route will perform a redirect in case\nthe user is or is not authorized:</p>\n<pre class=\"language-javascript\"><code><span class=\"token comment\" spellcheck=\"true\">// file: LandingRoute.js</span>\n<span class=\"token keyword\" >import</span> <span class=\"token punctuation\" >{</span> Route <span class=\"token punctuation\" >}</span> <span class=\"token keyword\" >from</span> <span class=\"token string\" >'page-fu'</span><span class=\"token punctuation\" >;</span>\n\n<span class=\"token keyword\" >export</span> <span class=\"token keyword\" >default</span> <span class=\"token function\" >Route</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span>\n  <span class=\"token function\" >enter</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    <span class=\"token keyword\" >if</span> <span class=\"token punctuation\" >(</span><span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span><span class=\"token function\" >isAuthorized</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n      <span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span><span class=\"token function\" >redirectTo</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'/dashboard'</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n    <span class=\"token punctuation\" >}</span>\n    <span class=\"token keyword\" >else</span> <span class=\"token punctuation\" >{</span>\n      <span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span><span class=\"token function\" >redirectTo</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'/login'</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n    <span class=\"token punctuation\" >}</span>\n  <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span>\n\n  <span class=\"token function\" >isAuthorized</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    <span class=\"token comment\" spellcheck=\"true\">// ...</span>\n  <span class=\"token punctuation\" >}</span>\n<span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// file: LandingRoute.test.js</span>\n<span class=\"token keyword\" >import</span> subject <span class=\"token keyword\" >from</span> <span class=\"token string\" >'./LandingRoute'</span><span class=\"token punctuation\" >;</span>\n\n<span class=\"token function\" >describe</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'LandingRoute'</span><span class=\"token punctuation\" >,</span> <span class=\"token keyword\" >function</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n  <span class=\"token function\" >it</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'redirects to \"/dashboard\" if user is logged in'</span><span class=\"token punctuation\" >,</span> <span class=\"token keyword\" >function</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    sinon<span class=\"token punctuation\" >.</span><span class=\"token function\" >stub</span><span class=\"token punctuation\" >(</span>subject<span class=\"token punctuation\" >,</span> <span class=\"token string\" >'isAuthorized'</span><span class=\"token punctuation\" >,</span> <span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token operator\" >=</span><span class=\"token operator\" >></span> <span class=\"token boolean\" >true</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n    sinon<span class=\"token punctuation\" >.</span><span class=\"token function\" >stub</span><span class=\"token punctuation\" >(</span>subject<span class=\"token punctuation\" >,</span> <span class=\"token string\" >'redirectTo'</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n\n    subject<span class=\"token punctuation\" >.</span><span class=\"token function\" >enter</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n\n    assert<span class=\"token punctuation\" >.</span><span class=\"token function\" >calledWith</span><span class=\"token punctuation\" >(</span>subject<span class=\"token punctuation\" >.</span>redirectTo<span class=\"token punctuation\" >,</span> <span class=\"token string\" >'/dashboard'</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n  <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span>\n<span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span></code></pre>\n<h3 class=\"anchorable-heading\">\n  <a name=\"testing\" class=\"anchorable-heading__anchor\"></a>\n  <a href=\"#testing\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Testing</span>\n</h3>","title":"Testing","wordCount":583,"plainTitle":"Testing\n","fileName":"testing","folder":"doc","id":"testing","sortingId":"doc/testing.md"},"symbol":"#","meta":{"anchor":"testing","href":"/testing.html","htmlFilePath":"testing.html"},"entities":["394f07b1d33009b93b98b78caacaf67b","eae8f7de6c65a2d5e316186ecc950805","8ed01e1031e37bad8ceeb91d68d6d60a","157f80fb3073759834049e6b6fbeb5c3","22580bb5c46e4ab7de53c1d98a455058"],"documents":[],"type":"Document","uid":"54123c790f41a82f523f2742b7d37268","summary":"Testing routes at the unit-level should be possible and page-fu defines the handlers in a way that makes them testable even without page.js actually running (assuming, of course, that you will be stubbing calls to the routing APIs.)","parentNodeUID":"793c199277a8254c22fd7539205c12ac","path":"articles/testing","indices":{"testing":1,"/doc/testing.md":1,"doc/testing.md":1}},{"id":"testing","title":"Testing","properties":{"id":"testing","scopedId":"testing","level":1,"html":"Testing","text":"Testing"},"indexFields":[],"filePath":"doc/testing.md","meta":{"indexDisplayName":" Testing","anchor":"testing","href":"/testing.html#testing","htmlFilePath":null},"type":"DocumentEntity","uid":"394f07b1d33009b93b98b78caacaf67b","parentNodeUID":"54123c790f41a82f523f2742b7d37268","path":"articles/testing#testing","indices":{}},{"id":"testing-the-enter-and-exit-hooks","title":"Testing the enter and exit hooks","properties":{"id":"testing-the-enter-and-exit-hooks","scopedId":"testing-the-enter-and-exit-hooks","level":2,"html":"Testing the <code>enter</code> and <code>exit</code> hooks","text":"Testing the enter and exit hooks"},"filePath":"doc/testing.md","meta":{"indexDisplayName":"   Testing the enter and exit hooks","anchor":"testing-the-enter-and-exit-hooks","href":"/testing.html#testing-the-enter-and-exit-hooks","htmlFilePath":null},"type":"DocumentEntity","uid":"eae8f7de6c65a2d5e316186ecc950805","parentNodeUID":"54123c790f41a82f523f2742b7d37268","path":"articles/testing#testing-the-enter-and-exit-hooks","indices":{"testing-the-enter-and-exit-hooks":0,"testing#testing-the-enter-and-exit-hooks":1,"/doc/testing.md#testing-the-enter-and-exit-hooks":1,"doc/testing.md#testing-the-enter-and-exit-hooks":1}},{"id":"testing-public-apis","title":"Testing public APIs","properties":{"id":"testing-public-apis","scopedId":"testing-public-apis","level":2,"html":"Testing public APIs","text":"Testing public APIs"},"filePath":"doc/testing.md","meta":{"indexDisplayName":"   Testing public APIs","anchor":"testing-public-apis","href":"/testing.html#testing-public-apis","htmlFilePath":null},"type":"DocumentEntity","uid":"8ed01e1031e37bad8ceeb91d68d6d60a","parentNodeUID":"54123c790f41a82f523f2742b7d37268","path":"articles/testing#testing-public-apis","indices":{"testing-public-apis":0,"testing#testing-public-apis":1,"/doc/testing.md#testing-public-apis":1,"doc/testing.md#testing-public-apis":1}},{"id":"testing-transitions","title":"Testing transitions","properties":{"id":"testing-transitions","scopedId":"testing-transitions","level":2,"html":"Testing transitions","text":"Testing transitions"},"filePath":"doc/testing.md","meta":{"indexDisplayName":"   Testing transitions","anchor":"testing-transitions","href":"/testing.html#testing-transitions","htmlFilePath":null},"type":"DocumentEntity","uid":"157f80fb3073759834049e6b6fbeb5c3","parentNodeUID":"54123c790f41a82f523f2742b7d37268","path":"articles/testing#testing-transitions","indices":{"testing-transitions":0,"testing#testing-transitions":1,"/doc/testing.md#testing-transitions":1,"doc/testing.md#testing-transitions":1}},{"id":"3testing","title":"Testing","properties":{"id":"testing","scopedId":"3testing","level":3,"html":"Testing","text":"Testing"},"filePath":"doc/testing.md","meta":{"indexDisplayName":"     Testing","anchor":"3testing","href":"/testing.html#3testing","htmlFilePath":null},"type":"DocumentEntity","uid":"22580bb5c46e4ab7de53c1d98a455058","parentNodeUID":"54123c790f41a82f523f2742b7d37268","path":"articles/testing#3testing","indices":{"3testing":0,"testing#3testing":1,"/doc/testing.md#3testing":1,"doc/testing.md#3testing":1}},{"id":"changelog","title":"CHANGELOG\n","filePath":"CHANGELOG.md","summaryFields":["source"],"properties":{"source":"\n<h1 class=\"anchorable-heading\">\n  <a name=\"changelog\" class=\"anchorable-heading__anchor\"></a>\n  <a href=\"#changelog\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">CHANGELOG</span>\n</h1>\n<h2 class=\"anchorable-heading\">\n  <a name=\"2-0-0\" class=\"anchorable-heading__anchor\"></a>\n  <a href=\"#2-0-0\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">2.0.0</span>\n</h2><ul>\n<li><code>withState</code> now passes the previous state to the <code>stateDidChange</code> hook</li>\n<li><code>StateTransaction</code> is a new facility for ensuring that the state remains\nfrozen throughout the block and any calls to <code>stateDidChange</code> are buffered</li>\n</ul>\n\n<h2 class=\"anchorable-heading\">\n  <a name=\"1-0-3\" class=\"anchorable-heading__anchor\"></a>\n  <a href=\"#1-0-3\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">1.0.3</span>\n</h2><ul>\n<li><code>withProps</code> now uses <code>ctx.querystring</code> for the initial query parameter\nvalues. This change is necessary to reflect query strings found in\ninternal page transitions (prior to <code>location</code> being modified by page.js)</li>\n</ul>\n\n<h2 class=\"anchorable-heading\">\n  <a name=\"1-0-2\" class=\"anchorable-heading__anchor\"></a>\n  <a href=\"#1-0-2\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">1.0.2</span>\n</h2><ul>\n<li><code>withProps</code> is now idempotent to prevent it from throwing errors itself\nif the next <code>enter</code> raises an exception</li>\n<li>Fixed a bug where <code>withState</code> would trigger <code>stateDidChange</code> on exit</li>\n</ul>\n\n<h2 class=\"anchorable-heading\">\n  <a name=\"1-0-1\" class=\"anchorable-heading__anchor\"></a>\n  <a href=\"#1-0-1\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">1.0.1</span>\n</h2><ul>\n<li>Use <code>HTMLElement#createEvent</code> to trigger the internal query event for IE11\ncompatibility.</li>\n</ul>\n\n<h2 class=\"anchorable-heading\">\n  <a name=\"1-0-0\" class=\"anchorable-heading__anchor\"></a>\n  <a href=\"#1-0-0\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">1.0.0</span>\n</h2><p>Initial release!</p>\n","title":"CHANGELOG","wordCount":119,"plainTitle":"CHANGELOG\n","fileName":"CHANGELOG","folder":".","id":"changelog","sortingId":"CHANGELOG.md"},"symbol":"#","meta":{"anchor":"changelog","href":"/changelog.html","htmlFilePath":"changelog.html"},"entities":["bd07d99ded377ed6f2c786319119cca1","6e8740e7a0fd30f7b2f7ae8782244e2b","5e40f6fa770b83b6041d2f013265a806","3fac953f33a2f43d2300e98b8b28b533","27c1843cee25d09a389fe97545a8fe3e","64a1aafeb374177c9995f2ed7661ba69"],"documents":[],"type":"Document","uid":"86e6908f05d91000d049203416e7103f","summary":"Initial release!","parentNodeUID":"793c199277a8254c22fd7539205c12ac","path":"articles/changelog","indices":{"changelog":1,"/CHANGELOG.md":1,"CHANGELOG.md":1}},{"id":"changelog","title":"CHANGELOG","properties":{"id":"changelog","scopedId":"changelog","level":1,"html":"CHANGELOG","text":"CHANGELOG"},"indexFields":[],"filePath":"CHANGELOG.md","meta":{"indexDisplayName":" CHANGELOG","anchor":"changelog","href":"/changelog.html#changelog","htmlFilePath":null},"type":"DocumentEntity","uid":"bd07d99ded377ed6f2c786319119cca1","parentNodeUID":"86e6908f05d91000d049203416e7103f","path":"articles/changelog#changelog","indices":{}},{"id":"2-0-0","title":"2.0.0","properties":{"id":"2-0-0","scopedId":"2-0-0","level":2,"html":"2.0.0","text":"2.0.0"},"filePath":"CHANGELOG.md","meta":{"indexDisplayName":"   2.0.0","anchor":"2-0-0","href":"/changelog.html#2-0-0","htmlFilePath":null},"type":"DocumentEntity","uid":"6e8740e7a0fd30f7b2f7ae8782244e2b","parentNodeUID":"86e6908f05d91000d049203416e7103f","path":"articles/changelog#2-0-0","indices":{"2-0-0":0,"changelog#2-0-0":1,"/CHANGELOG.md#2-0-0":1,"CHANGELOG.md#2-0-0":1}},{"id":"1-0-3","title":"1.0.3","properties":{"id":"1-0-3","scopedId":"1-0-3","level":2,"html":"1.0.3","text":"1.0.3"},"filePath":"CHANGELOG.md","meta":{"indexDisplayName":"   1.0.3","anchor":"1-0-3","href":"/changelog.html#1-0-3","htmlFilePath":null},"type":"DocumentEntity","uid":"5e40f6fa770b83b6041d2f013265a806","parentNodeUID":"86e6908f05d91000d049203416e7103f","path":"articles/changelog#1-0-3","indices":{"1-0-3":0,"changelog#1-0-3":1,"/CHANGELOG.md#1-0-3":1,"CHANGELOG.md#1-0-3":1}},{"id":"1-0-2","title":"1.0.2","properties":{"id":"1-0-2","scopedId":"1-0-2","level":2,"html":"1.0.2","text":"1.0.2"},"filePath":"CHANGELOG.md","meta":{"indexDisplayName":"   1.0.2","anchor":"1-0-2","href":"/changelog.html#1-0-2","htmlFilePath":null},"type":"DocumentEntity","uid":"3fac953f33a2f43d2300e98b8b28b533","parentNodeUID":"86e6908f05d91000d049203416e7103f","path":"articles/changelog#1-0-2","indices":{"1-0-2":0,"changelog#1-0-2":1,"/CHANGELOG.md#1-0-2":1,"CHANGELOG.md#1-0-2":1}},{"id":"1-0-1","title":"1.0.1","properties":{"id":"1-0-1","scopedId":"1-0-1","level":2,"html":"1.0.1","text":"1.0.1"},"filePath":"CHANGELOG.md","meta":{"indexDisplayName":"   1.0.1","anchor":"1-0-1","href":"/changelog.html#1-0-1","htmlFilePath":null},"type":"DocumentEntity","uid":"27c1843cee25d09a389fe97545a8fe3e","parentNodeUID":"86e6908f05d91000d049203416e7103f","path":"articles/changelog#1-0-1","indices":{"1-0-1":0,"changelog#1-0-1":1,"/CHANGELOG.md#1-0-1":1,"CHANGELOG.md#1-0-1":1}},{"id":"1-0-0","title":"1.0.0","properties":{"id":"1-0-0","scopedId":"1-0-0","level":2,"html":"1.0.0","text":"1.0.0"},"filePath":"CHANGELOG.md","meta":{"indexDisplayName":"   1.0.0","anchor":"1-0-0","href":"/changelog.html#1-0-0","htmlFilePath":null},"type":"DocumentEntity","uid":"64a1aafeb374177c9995f2ed7661ba69","parentNodeUID":"86e6908f05d91000d049203416e7103f","path":"articles/changelog#1-0-0","indices":{"1-0-0":0,"changelog#1-0-0":1,"/CHANGELOG.md#1-0-0":1,"CHANGELOG.md#1-0-0":1}}]}))
  